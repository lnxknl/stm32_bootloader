cscope 15 $HOME/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader               0000171568
	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/bitwise.h

19 #i‚de‡
BITWISE_H_


20 
	#BITWISE_H_


	)

22 
	#bô_£t
(
p
,
m
Ë(’Ë|(m))

	)

23 
	#bô_˛ór
(
p
,
m
Ë(’Ë&~(m))

	)

24 
	#bô_wrôe
(
c
,
p
,
m
Ë(¯? 
	`bô_£t
’,mË: 
	`bô_˛ór
’,m))

	)

25 
	#bô_check
(
vÆue
, 
bô
Ë(((vÆueË>> (bô)Ë& 0x01)

	)

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/hid.c

19 
	~<°m32f10x.h
>

20 
	~<°rög.h
>

22 
	~"usb.h
"

23 
	~"hid.h
"

24 
	~"Àd.h
"

25 
	~"bôwi£.h
"

28 
	#EP_NUM
 2

	)

31 
	#MIN_PAGE
 4

	)

33 
uöt8_t
 
	gCMD_SIGNATURE
[] = {'B','T','L','D','C','M','D'};

35 
uöt8_t
 
	g∑geD©a
[1024];

36 vﬁ©ûê
uöt8_t
 
	gcuºítPage
 = 
MIN_PAGE
;

37 vﬁ©ûê
uöt16_t
 
	gcuºítPageOff£t
 = 0;

39 vﬁ©ûê
uöt8_t
 
Devi˚Addªss
;

40 vﬁ©ûê
uöt16_t
 
Devi˚C⁄figuªd
, 
Devi˚Sètus
;

42 
USB_SëupPackë
 *
	gSëupPackë
;

45 
	#BTABLE_ADDRESS
 (0x00)

	)

49 
	#ENDP0_RXADDR
 (0x18)

	)

50 
	#ENDP0_TXADDR
 (0x58)

	)

54 
	#ENDP1_TXADDR
 (0x100)

	)

57 c⁄° 
uöt8_t
 
	gUSB_DEVICE_DESC
[] = {

74 c⁄° 
uöt8_t
 
	gUSBD_DEVICE_CFG_DESCRIPTOR
[] = {

110 c⁄° 
uöt8_t
 
	gusbHidRï‹tDes¸ùt‹
[32] = {

129 
	$HIDUSB_Re£t
() {

131 
	`Àd_öô
();

132 
	`Àd_off
();

135 
cuºítPage
 = 
MIN_PAGE
;

136 
cuºítPageOff£t
 = 0;

138 
	`_SëBTABLE
(
BTABLE_ADDRESS
);

141 
	`_SëEPTy≥
(
ENDP0
, 
EP_CONTROL
);

142 
	`_SëEPRxAddr
(
ENDP0
, 
ENDP0_RXADDR
);

143 
	`_SëEPTxAddr
(
ENDP0
, 
ENDP0_TXADDR
);

144 
	`_CÀ¨EP_KIND
(
ENDP0
);

145 
	`_SëEPRxCou¡
(
ENDP0
, 8);

146 
	`_SëEPRxVÆid
(
ENDP0
);

149 
	`_SëEPTy≥
(
ENDP1
, 
EP_INTERRUPT
);

150 
	`_SëEPTxAddr
(
ENDP1
, 
ENDP1_TXADDR
);

151 
	`_SëEPTxCou¡
(
ENDP1
, 0x8);

152 
	`_SëEPRxSètus
(
ENDP1
, 
EP_RX_DIS
);

153 
	`_SëEPTxSètus
(
ENDP1
, 
EP_TX_NAK
);

156 
i
 = 0; i < 
EP_NUM
; i++) {

157 
	`_SëEPAddªss
((
uöt8_t
 )
i
, (uint8_t )i);

158 
RxTxBuf„r
[
i
].
MaxPackëSize
 = 8;

161 
	`_SëDADDR
(0 | 
DADDR_EF
);

162 
	}
}

164 
	$HIDUSB_GëDes¸ùt‹
(
USB_SëupPackë
 *
SPackë
) {

166 
SPackë
->
wVÆue
.
H
) {

167 
USB_DEVICE_DESC_TYPE
:

168 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
USB_DEVICE_DESC
,

169 
SPackë
->
wLígth
 > (
USB_DEVICE_DESC
) ?

170 (
USB_DEVICE_DESC
Ë: 
SPackë
->
wLígth
);

173 
USB_CFG_DESC_TYPE
:

174 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
USBD_DEVICE_CFG_DESCRIPTOR
,

175 
SPackë
->
wLígth
 > (
USBD_DEVICE_CFG_DESCRIPTOR
) ?

176 (
USBD_DEVICE_CFG_DESCRIPTOR
Ë: 
SPackë
->
wLígth
);

179 
USB_REPORT_DESC_TYPE
:

180 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
usbHidRï‹tDes¸ùt‹
,

181 
SPackë
->
wLígth
 > (
usbHidRï‹tDes¸ùt‹
) ?

182 (
usbHidRï‹tDes¸ùt‹
Ë: 
SPackë
->
wLígth
);

185 
USB_STR_DESC_TYPE
:

187 
SPackë
->
wVÆue
.
L
) {

189 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
sdL™gID
,

190 
SPackë
->
wLígth
 > (
sdL™gID
) ?

191 (
sdL™gID
Ë: 
SPackë
->
wLígth
);

194 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
sdVíd‹
,

195 
SPackë
->
wLígth
 > (
sdVíd‹
) ?

196 (
sdVíd‹
Ë: 
SPackë
->
wLígth
);

199 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë
sdProdu˘
,

200 
SPackë
->
wLígth
 > (
sdProdu˘
) ?

201 (
sdProdu˘
Ë: 
SPackë
->
wLígth
);

204 
	`USB_SídD©a
(0, 0, 0);

209 
	`USB_SídD©a
(0, 0, 0);

212 
	}
}

214 
	$HIDUSB_FœshU∆ock
() {

215 
FLASH
->
KEYR
 = 
FLASH_KEY1
;

216 
FLASH
->
KEYR
 = 
FLASH_KEY2
;

217 
	}
}

219 
	$HIDUSB_FœshLock
() {

220 
	`bô_£t
(
FLASH
->
CR
, 
FLASH_CR_LOCK
);

221 
	}
}

223 
	$HIDUSB_F‹m©FœshPage
(
uöt32_t
 
∑ge
) {

224 
FLASH
->
SR
 & 
FLASH_SR_BSY
);

226 
	`bô_£t
(
FLASH
->
CR
, 
FLASH_CR_PER
);

228 
FLASH
->
AR
 = 
∑ge
;

230 
	`bô_£t
(
FLASH
->
CR
, 
FLASH_CR_STRT
);

232 
FLASH
->
SR
 & 
FLASH_SR_BSY
);

234 
	`bô_˛ór
(
FLASH
->
CR
, 
FLASH_CR_PER
);

235 
	}
}

237 
	$HIDUSB_WrôeFœsh
(
uöt32_t
 
∑ge
, 
uöt8_t
 *
d©a
, 
uöt16_t
 
size
) {

238 
FLASH
->
SR
 & 
FLASH_SR_BSY
);

240 
	`bô_£t
(
FLASH
->
CR
, 
FLASH_CR_PG
);

242 
uöt16_t
 
i
 = 0; i < 
size
; i += 2) {

243 *(vﬁ©ûê
uöt16_t
 *)(
∑ge
 + 
i
Ë*(uöt16_à*)(
d©a
 + i);

245 
FLASH
->
SR
 & 
FLASH_SR_BSY
);

248 
	`bô_˛ór
(
FLASH
->
CR
, 
FLASH_CR_PG
);

249 
	}
}

251 
uöt8_t
 
	$HIDUSB_PackëIsComm™d
() {

252 
uöt8_t
 
hasd©a
 = 0;

254 
i
 = 8; i < 128; i++) {

255 
hasd©a
 |
∑geD©a
[
i
];

258 if(
hasd©a
) {

262 if(
	`memcmp
(
∑geD©a
, 
CMD_SIGNATURE
, (CMD_SIGNATURE)) == 0) {

267 
	}
}

269 
	$HIDUSB_H™dÀD©a
(
uöt8_t
 *
d©a
) {

270 
uöt32_t
 
∑geAddªss
;

272 
	`mem˝y
(
∑geD©a
 + 
cuºítPageOff£t
, 
d©a
, 8);

274 
cuºítPageOff£t
 += 8;

276 if(
cuºítPageOff£t
 == 128) {

277 if(
	`HIDUSB_PackëIsComm™d
()) {

278 
∑geD©a
[7]) {

280 
cuºítPage
 = 
MIN_PAGE
;

281 
cuºítPageOff£t
 = 0;

289 if(
cuºítPageOff£t
 >= 1024) {

290 
	`Àd_⁄
();

292 
∑geAddªss
 = 0x08000000 + (
cuºítPage
 * 1024);

294 
	`HIDUSB_FœshU∆ock
();

295 
	`HIDUSB_F‹m©FœshPage
(
∑geAddªss
);

296 
	`HIDUSB_WrôeFœsh
(
∑geAddªss
, 
∑geD©a
, 1024);

297 
	`HIDUSB_FœshLock
();

299 
cuºítPage
++;

300 
cuºítPageOff£t
 = 0;

302 
	`Àd_off
();

305 
	}
}

307 
	$HIDUSB_EPH™dÀr
(
uöt16_t
 
Sètus
) {

309 
uöt8_t
 
EPn
 = 
Sètus
 & 
USB_ISTR_EP_ID
;

310 
uöt16_t
 
EP
 = 
	`_GëENDPOINT
(
EPn
);

313 i‡(
EP
 & 
EP_CTR_RX
) {

316 
	`USB_PMA2Buf„r
(
EPn
);

318 i‡(
EPn
 == 0) {

320 i‡(
EP
 & 
USB_EP0R_SETUP
) {

322 
SëupPackë
 = (
USB_SëupPackë
 *Ë
RxTxBuf„r
[
EPn
].
RXB
;

324 
SëupPackë
->
bReque°
) {

325 
USB_REQUEST_SET_ADDRESS
:

326 
Devi˚Addªss
 = 
SëupPackë
->
wVÆue
.
L
;

327 
	`USB_SídD©a
(0, 0, 0);

330 
USB_REQUEST_GET_DESCRIPTOR
:

331 
	`HIDUSB_GëDes¸ùt‹
(
SëupPackë
);

334 
USB_REQUEST_GET_STATUS
:

335 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë&
Devi˚Sètus
, 2);

338 
USB_REQUEST_GET_CONFIGURATION
:

339 
	`USB_SídD©a
(0, (
uöt16_t
 *Ë&
Devi˚C⁄figuªd
, 1);

342 
USB_REQUEST_SET_CONFIGURATION
:

343 
Devi˚C⁄figuªd
 = 1;

344 
	`USB_SídD©a
(0, 0, 0);

347 
USB_REQUEST_GET_INTERFACE
:

348 
	`USB_SídD©a
(0, 0, 0);

352 
	`USB_SídD©a
(0, 0, 0);

353 
	`_SëEPTxSètus
(0, 
EP_TX_STALL
);

358 if(
RxTxBuf„r
[
EPn
].
RXL
) {

359 
	`HIDUSB_H™dÀD©a
((
uöt8_t
 *Ë
RxTxBuf„r
[
EPn
].
RXB
);

365 
	`HIDUSB_D©aRe˚ivedH™dÀr
(
RxTxBuf„r
[
EPn
].
RXB
,

366 
RxTxBuf„r
[
EPn
].
RXL
);

369 
	`_CÀ¨EP_CTR_RX
(
EPn
);

370 
	`_SëEPRxVÆid
(
EPn
);

373 i‡(
EP
 & 
EP_CTR_TX
) {

374 i‡(
Devi˚Addªss
) {

375 
	`_SëDADDR
(
Devi˚Addªss
 | 
DADDR_EF
);

376 
Devi˚Addªss
 = 0;

379 i‡(
RxTxBuf„r
[
EPn
].
TXL
) {

380 
	`USB_Buf„r2PMA
(
EPn
);

382 
	`_SëEPTxCou¡
(
EPn
, 0);

385 
	`_SëEPTxVÆid
(
EPn
);

386 
	`_CÀ¨EP_CTR_TX
(
EPn
);

388 
	}
}

390 
__©åibuã__
((
wók
)Ë
	$HIDUSB_D©aRe˚ivedH™dÀr
(
uöt16_t
 *
D©a
, uöt16_à
Lígth
) {

391 
	}
}

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/hid.h

19 #i‚de‡
HID_H_


20 
	#HID_H_


	)

22 
HIDUSB_Re£t
();

23 
HIDUSB_EPH™dÀr
(
uöt16_t
 
Sètus
);

25 
__©åibuã__
((
wók
)Ë
HIDUSB_D©aRe˚ivedH™dÀr
(
uöt16_t
 *
D©a
,

26 
uöt16_t
 
Lígth
);

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/led.c

19 
	~<°m32f10x.h
>

21 
	~"bôwi£.h
"

23 
	$Àd_off
() {

24 
GPIOC
->
BSRR
 = 
GPIO_BSRR_BS13
;

25 
	}
}

27 
	$Àd_⁄
() {

28 
GPIOC
->
BRR
 = 
GPIO_BRR_BR13
;

29 
	}
}

31 
	$Àd_öô
() {

33 
	`bô_£t
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPCEN
);

36 
	`bô_£t
(
GPIOC
->
CRH
, 
GPIO_CRH_CNF13_0
);

37 
	`bô_˛ór
(
GPIOC
->
CRH
, 
GPIO_CRH_CNF13_1
);

40 
	`bô_£t
(
GPIOC
->
CRH
, 
GPIO_CRH_MODE13
);

41 
	}
}

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/led.h

19 #i‚de‡
LED_H_


20 
	#LED_H_


	)

22 
Àd_⁄
();

23 
Àd_off
();

24 
Àd_öô
();

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/main.c

19 
	~<°m32f10x.h
>

21 
	~"usb.h
"

22 
	~"hid.h
"

23 
	~"bôwi£.h
"

26 
	#USER_PROGRAM
 0x08001000

	)

28 
	$maö
() {

29 
uöt32_t
 
u§Sp
 = *(vﬁ©ûêuöt32_à*)
USER_PROGRAM
;

30 
uöt32_t
 
u§Maö
 = *(vﬁ©ûêuöt32_à*)(
USER_PROGRAM
 + 0x04);

33 
	`bô_£t
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPBEN
);

36 
	`bô_˛ór
(
GPIOB
->
CRL
, 
GPIO_CRL_MODE2
);

37 
	`bô_£t
(
GPIOB
->
CRL
, 
GPIO_CRL_CNF2_0
);

38 
	`bô_˛ór
(
GPIOB
->
CRL
, 
GPIO_CRL_CNF2_1
);

41 if(
GPIOB
->
IDR
 & 
GPIO_IDR_IDR2
) {

42 
	`USB_Inô
(
HIDUSB_EPH™dÀr
, 
HIDUSB_Re£t
);

45 
	`bô_˛ór
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPBEN
);

47 
SCB
->
VTOR
 = 
USER_PROGRAM
;

49 
__asm__
 volatile(

52 :: "r" (
u§Sp
), "r" (
u§Maö
));

56 
	}
}

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/system_stm32f10x.c

71 
	~"°m32f10x.h
"

112 #i‡
deföed
 (
STM32F10X_LD_VL
Ë|| (deföed 
STM32F10X_MD_VL
Ë|| (deföed 
STM32F10X_HD_VL
)

114 
	#SYSCLK_FREQ_24MHz
 24000000

	)

121 
	#SYSCLK_FREQ_72MHz
 72000000

	)

127 #i‡
deföed
 (
STM32F10X_HD
Ë|| (deföed 
STM32F10X_XL
Ë|| (deföed 
STM32F10X_HD_VL
)

134 
	#VECT_TAB_OFFSET
 
VECTOR_TABLE_OFFSET


	)

157 #ifde‡
SYSCLK_FREQ_HSE


158 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_HSE
;

159 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


160 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_24MHz
;

161 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


162 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_36MHz
;

163 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


164 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_48MHz
;

165 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


166 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_56MHz
;

167 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


168 
uöt32_t
 
	gSy°emC‹eClock
 = 
SYSCLK_FREQ_72MHz
;

170 
uöt32_t
 
	gSy°emC‹eClock
 = 
HSI_VALUE
;

173 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

182 
SëSysClock
();

184 #ifde‡
SYSCLK_FREQ_HSE


185 
SëSysClockToHSE
();

186 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


187 
SëSysClockTo24
();

188 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


189 
SëSysClockTo36
();

190 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


191 
SëSysClockTo48
();

192 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


193 
SëSysClockTo56
();

194 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


195 
SëSysClockTo72
();

198 #ifde‡
DATA_IN_ExtSRAM


199 
Sy°emInô_ExtMemCé
();

218 
	$Sy°emInô
 ()

222 
RCC
->
CR
 |(
uöt32_t
)0x00000001;

225 #i‚de‡
STM32F10X_CL


226 
RCC
->
CFGR
 &(
uöt32_t
)0xF8FF0000;

228 
RCC
->
CFGR
 &(
uöt32_t
)0xF0FF0000;

232 
RCC
->
CR
 &(
uöt32_t
)0xFEF6FFFF;

235 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

238 
RCC
->
CFGR
 &(
uöt32_t
)0xFF80FFFF;

240 #ifde‡
STM32F10X_CL


242 
RCC
->
CR
 &(
uöt32_t
)0xEBFFFFFF;

245 
RCC
->
CIR
 = 0x00FF0000;

248 
RCC
->
CFGR2
 = 0x00000000;

249 #ñi‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

251 
RCC
->
CIR
 = 0x009F0000;

254 
RCC
->
CFGR2
 = 0x00000000;

257 
RCC
->
CIR
 = 0x009F0000;

260 #i‡
	`deföed
 (
STM32F10X_HD
Ë|| (
deföed
 
STM32F10X_XL
Ë|| (deföed 
STM32F10X_HD_VL
)

261 #ifde‡
DATA_IN_ExtSRAM


262 
	`Sy°emInô_ExtMemCé
();

268 
	`SëSysClock
();

270 #ifde‡
VECT_TAB_SRAM


271 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

273 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

275 
	}
}

312 
	$Sy°emC‹eClockUpd©e
 ()

314 
uöt32_t
 
tmp
 = 0, 
∂lmuŒ
 = 0, 
∂lsour˚
 = 0;

316 #ifde‡ 
STM32F10X_CL


317 
uöt32_t
 
¥ediv1sour˚
 = 0, 
¥ediv1Á˘‹
 = 0, 
¥ediv2Á˘‹
 = 0, 
∂l2muŒ
 = 0;

320 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

321 
uöt32_t
 
¥ediv1Á˘‹
 = 0;

325 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

327 
tmp
)

330 
Sy°emC‹eClock
 = 
HSI_VALUE
;

333 
Sy°emC‹eClock
 = 
HSE_VALUE
;

338 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

339 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

341 #i‚de‡
STM32F10X_CL


342 
∂lmuŒ
 = (Öllmull >> 18) + 2;

344 i‡(
∂lsour˚
 == 0x00)

347 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

351 #i‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| (
deföed
 
STM32F10X_HD_VL
)

352 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

354 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

357 i‡((
RCC
->
CFGR
 & 
RCC_CFGR_PLLXTPRE
Ë!(
uöt32_t
)
RESET
)

359 
Sy°emC‹eClock
 = (
HSE_VALUE
 >> 1Ë* 
∂lmuŒ
;

363 
Sy°emC‹eClock
 = 
HSE_VALUE
 * 
∂lmuŒ
;

368 
∂lmuŒ
 =Öllmull >> 18;

370 i‡(
∂lmuŒ
 != 0x0D)

372 
∂lmuŒ
 += 2;

376 
∂lmuŒ
 = 13 / 2;

379 i‡(
∂lsour˚
 == 0x00)

382 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

388 
¥ediv1sour˚
 = 
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1SRC
;

389 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

391 i‡(
¥ediv1sour˚
 == 0)

394 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

400 
¥ediv2Á˘‹
 = ((
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV2
) >> 4) + 1;

401 
∂l2muŒ
 = ((
RCC
->
CFGR2
 & 
RCC_CFGR2_PLL2MUL
) >> 8 ) + 2;

402 
Sy°emC‹eClock
 = (((
HSE_VALUE
 / 
¥ediv2Á˘‹
Ë* 
∂l2muŒ
Ë/ 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

409 
Sy°emC‹eClock
 = 
HSI_VALUE
;

415 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

417 
Sy°emC‹eClock
 >>
tmp
;

418 
	}
}

425 
	$SëSysClock
()

427 #ifde‡
SYSCLK_FREQ_HSE


428 
	`SëSysClockToHSE
();

429 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


430 
	`SëSysClockTo24
();

431 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


432 
	`SëSysClockTo36
();

433 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


434 
	`SëSysClockTo48
();

435 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


436 
	`SëSysClockTo56
();

437 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


438 
	`SëSysClockTo72
();

443 
	}
}

451 #ifde‡
DATA_IN_ExtSRAM


461 
	$Sy°emInô_ExtMemCé
()

467 
RCC
->
AHBENR
 = 0x00000114;

470 
RCC
->
APB2ENR
 = 0x000001E0;

478 
GPIOD
->
CRL
 = 0x44BB44BB;

479 
GPIOD
->
CRH
 = 0xBBBBBBBB;

481 
GPIOE
->
CRL
 = 0xB44444BB;

482 
GPIOE
->
CRH
 = 0xBBBBBBBB;

484 
GPIOF
->
CRL
 = 0x44BBBBBB;

485 
GPIOF
->
CRH
 = 0xBBBB4444;

487 
GPIOG
->
CRL
 = 0x44BBBBBB;

488 
GPIOG
->
CRH
 = 0x44444B44;

493 
FSMC_B™k1
->
BTCR
[4] = 0x00001011;

494 
FSMC_B™k1
->
BTCR
[5] = 0x00000200;

495 
	}
}

498 #ifde‡
SYSCLK_FREQ_HSE


506 
	$SëSysClockToHSE
()

508 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

512 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

517 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

518 
SèπUpCou¡î
++;

519 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

521 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

523 
HSESètus
 = (
uöt32_t
)0x01;

527 
HSESètus
 = (
uöt32_t
)0x00;

530 i‡(
HSESètus
 =(
uöt32_t
)0x01)

533 #i‡!
deföed
 
STM32F10X_LD_VL
 && !deföed 
STM32F10X_MD_VL
 && !deföed 
STM32F10X_HD_VL


535 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

538 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

540 #i‚de‡
STM32F10X_CL


541 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

543 i‡(
HSE_VALUE
 <= 24000000)

545 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

549 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

555 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

558 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

561 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

564 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

565 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_HSE
;

568 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x04)

576 
	}
}

577 #ñi‡
deföed
 
SYSCLK_FREQ_24MHz


585 
	$SëSysClockTo24
()

587 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

591 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

596 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

597 
SèπUpCou¡î
++;

598 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

600 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

602 
HSESètus
 = (
uöt32_t
)0x01;

606 
HSESètus
 = (
uöt32_t
)0x00;

609 i‡(
HSESètus
 =(
uöt32_t
)0x01)

611 #i‡!
deföed
 
STM32F10X_LD_VL
 && !deföed 
STM32F10X_MD_VL
 && !deföed 
STM32F10X_HD_VL


613 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

616 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

617 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

621 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

624 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

627 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

629 #ifde‡
STM32F10X_CL


632 
RCC
->
CFGR
 &(
uöt32_t
)~(
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMULL
);

633 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLSRC_PREDIV1
 |

634 
RCC_CFGR_PLLMULL6
);

638 
RCC
->
CFGR2
 &(
uöt32_t
)~(
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
 |

639 
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
);

640 
RCC
->
CFGR2
 |(
uöt32_t
)(
RCC_CFGR2_PREDIV2_DIV5
 | 
RCC_CFGR2_PLL2MUL8
 |

641 
RCC_CFGR2_PREDIV1SRC_PLL2
 | 
RCC_CFGR2_PREDIV1_DIV10
);

644 
RCC
->
CR
 |
RCC_CR_PLL2ON
;

646 (
RCC
->
CR
 & 
RCC_CR_PLL2RDY
) == 0)

649 #ñi‡
	`deföed
 (
STM32F10X_LD_VL
Ë|| deföed (
STM32F10X_MD_VL
Ë|| deföed (
STM32F10X_HD_VL
)

651 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

652 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_PREDIV1
 | 
RCC_CFGR_PLLXTPRE_PREDIV1_Div2
 | 
RCC_CFGR_PLLMULL6
);

655 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

656 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLXTPRE_HSE_Div2
 | 
RCC_CFGR_PLLMULL6
);

660 
RCC
->
CR
 |
RCC_CR_PLLON
;

663 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

668 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

669 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

672 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

680 
	}
}

681 #ñi‡
deföed
 
SYSCLK_FREQ_36MHz


689 
	$SëSysClockTo36
()

691 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

695 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

700 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

701 
SèπUpCou¡î
++;

702 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

704 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

706 
HSESètus
 = (
uöt32_t
)0x01;

710 
HSESètus
 = (
uöt32_t
)0x00;

713 i‡(
HSESètus
 =(
uöt32_t
)0x01)

716 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

719 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

720 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

723 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

726 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

729 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

731 #ifde‡
STM32F10X_CL


735 
RCC
->
CFGR
 &(
uöt32_t
)~(
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMULL
);

736 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLSRC_PREDIV1
 |

737 
RCC_CFGR_PLLMULL9
);

742 
RCC
->
CFGR2
 &(
uöt32_t
)~(
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
 |

743 
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
);

744 
RCC
->
CFGR2
 |(
uöt32_t
)(
RCC_CFGR2_PREDIV2_DIV5
 | 
RCC_CFGR2_PLL2MUL8
 |

745 
RCC_CFGR2_PREDIV1SRC_PLL2
 | 
RCC_CFGR2_PREDIV1_DIV10
);

748 
RCC
->
CR
 |
RCC_CR_PLL2ON
;

750 (
RCC
->
CR
 & 
RCC_CR_PLL2RDY
) == 0)

756 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

757 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLXTPRE_HSE_Div2
 | 
RCC_CFGR_PLLMULL9
);

761 
RCC
->
CR
 |
RCC_CR_PLLON
;

764 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

769 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

770 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

773 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

781 
	}
}

782 #ñi‡
deföed
 
SYSCLK_FREQ_48MHz


790 
	$SëSysClockTo48
()

792 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

796 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

801 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

802 
SèπUpCou¡î
++;

803 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

805 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

807 
HSESètus
 = (
uöt32_t
)0x01;

811 
HSESètus
 = (
uöt32_t
)0x00;

814 i‡(
HSESètus
 =(
uöt32_t
)0x01)

817 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

820 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

821 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

824 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

827 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

830 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

832 #ifde‡
STM32F10X_CL


837 
RCC
->
CFGR2
 &(
uöt32_t
)~(
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
 |

838 
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
);

839 
RCC
->
CFGR2
 |(
uöt32_t
)(
RCC_CFGR2_PREDIV2_DIV5
 | 
RCC_CFGR2_PLL2MUL8
 |

840 
RCC_CFGR2_PREDIV1SRC_PLL2
 | 
RCC_CFGR2_PREDIV1_DIV5
);

843 
RCC
->
CR
 |
RCC_CR_PLL2ON
;

845 (
RCC
->
CR
 & 
RCC_CR_PLL2RDY
) == 0)

851 
RCC
->
CFGR
 &(
uöt32_t
)~(
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMULL
);

852 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLSRC_PREDIV1
 |

853 
RCC_CFGR_PLLMULL6
);

856 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

857 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL6
);

861 
RCC
->
CR
 |
RCC_CR_PLLON
;

864 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

869 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

870 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

873 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

881 
	}
}

883 #ñi‡
deföed
 
SYSCLK_FREQ_56MHz


891 
	$SëSysClockTo56
()

893 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

897 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

902 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

903 
SèπUpCou¡î
++;

904 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

906 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

908 
HSESètus
 = (
uöt32_t
)0x01;

912 
HSESètus
 = (
uöt32_t
)0x00;

915 i‡(
HSESètus
 =(
uöt32_t
)0x01)

918 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

921 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

922 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_2
;

925 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

928 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

931 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

933 #ifde‡
STM32F10X_CL


938 
RCC
->
CFGR2
 &(
uöt32_t
)~(
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
 |

939 
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
);

940 
RCC
->
CFGR2
 |(
uöt32_t
)(
RCC_CFGR2_PREDIV2_DIV5
 | 
RCC_CFGR2_PLL2MUL8
 |

941 
RCC_CFGR2_PREDIV1SRC_PLL2
 | 
RCC_CFGR2_PREDIV1_DIV5
);

944 
RCC
->
CR
 |
RCC_CR_PLL2ON
;

946 (
RCC
->
CR
 & 
RCC_CR_PLL2RDY
) == 0)

952 
RCC
->
CFGR
 &(
uöt32_t
)~(
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMULL
);

953 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLSRC_PREDIV1
 |

954 
RCC_CFGR_PLLMULL7
);

957 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

958 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL7
);

963 
RCC
->
CR
 |
RCC_CR_PLLON
;

966 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

971 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

972 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

975 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

983 
	}
}

985 #ñi‡
deföed
 
SYSCLK_FREQ_72MHz


993 
	$SëSysClockTo72
()

995 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

999 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

1004 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

1005 
SèπUpCou¡î
++;

1006 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

1008 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

1010 
HSESètus
 = (
uöt32_t
)0x01;

1014 
HSESètus
 = (
uöt32_t
)0x00;

1017 i‡(
HSESètus
 =(
uöt32_t
)0x01)

1020 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

1023 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

1024 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_2
;

1028 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

1031 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

1034 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV2
;

1036 #ifde‡
STM32F10X_CL


1041 
RCC
->
CFGR2
 &(
uöt32_t
)~(
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
 |

1042 
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
);

1043 
RCC
->
CFGR2
 |(
uöt32_t
)(
RCC_CFGR2_PREDIV2_DIV5
 | 
RCC_CFGR2_PLL2MUL8
 |

1044 
RCC_CFGR2_PREDIV1SRC_PLL2
 | 
RCC_CFGR2_PREDIV1_DIV5
);

1047 
RCC
->
CR
 |
RCC_CR_PLL2ON
;

1049 (
RCC
->
CR
 & 
RCC_CR_PLL2RDY
) == 0)

1055 
RCC
->
CFGR
 &(
uöt32_t
)~(
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMULL
);

1056 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLSRC_PREDIV1
 |

1057 
RCC_CFGR_PLLMULL9
);

1060 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 |

1061 
RCC_CFGR_PLLMULL
));

1062 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSE
 | 
RCC_CFGR_PLLMULL9
);

1066 
RCC
->
CR
 |
RCC_CR_PLLON
;

1069 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

1074 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

1075 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

1078 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
) != (uint32_t)0x08)

1086 
	}
}

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/usb.c

19 
	~<°m32f10x.h
>

20 
	~<°dlib.h
>

22 
	~"usb.h
"

23 
	~"bôwi£.h
"

25 
USB_RxTxBuf_t
 
	gRxTxBuf„r
[
MAX_EP_NUM
];

27 vﬁ©ûê
uöt8_t
 
	gDevi˚Addªss
 = 0;

28 vﬁ©ûê
uöt16_t
 
	gDevi˚C⁄figuªd
 = 0, 
	gDevi˚Sètus
 = 0;

29 (*
_EPH™dÀr
)(
uöt16_t
Ë
NULL
;

30 (*
_USBRe£tH™dÀr
)(Ë
NULL
;

33 c⁄° 
uöt8_t
 
sdVíd‹
[] = {

39 
	}
};

41 c⁄° 
uöt8_t
 
	gsdProdu˘
[] = {

49 c⁄° 
uöt8_t
 
	gsdSîül
[] = {

55 c⁄° 
uöt8_t
 
	gsdL™gID
[] = {

61 
	$USB_PMA2Buf„r
(
uöt8_t
 
EPn
) {

62 
uöt8_t
 
Cou¡
 = 
RxTxBuf„r
[
EPn
].
RXL
 = (
	`_GëEPRxCou¡
(EPn) & 0x3FF);

63 
uöt32_t
 *
Addªss
 = (uöt32_à*Ë(
PMAAddr
 + 
	`_GëEPRxAddr
(
EPn
) * 2);

64 
uöt16_t
 *
De°ö©i⁄
 = (uöt16_à*Ë
RxTxBuf„r
[
EPn
].
RXB
;

66 
uöt8_t
 
i
 = 0; i < 
Cou¡
; i++) {

67 *(
uöt16_t
 *Ë
De°ö©i⁄
 = *(uöt16_à*Ë
Addªss
;

68 
De°ö©i⁄
++;

69 
Addªss
++;

71 
	}
}

73 
	$USB_Buf„r2PMA
(
uöt8_t
 
EPn
) {

74 
uöt32_t
 *
De°ö©i⁄
;

75 
uöt8_t
 
Cou¡
;

77 
Cou¡
 = 
RxTxBuf„r
[
EPn
].
TXL
 <RxTxBuf„r[EPn].
MaxPackëSize
 ? RxTxBuffer[EPn].TXL : RxTxBuffer[EPn].MaxPacketSize;

78 
	`_SëEPTxCou¡
(
EPn
, 
Cou¡
);

80 
De°ö©i⁄
 = (
uöt32_t
 *Ë(
PMAAddr
 + 
	`_GëEPTxAddr
(
EPn
) * 2);

82 
uöt8_t
 
i
 = 0; i < (
Cou¡
 + 1) / 2; i++) {

83 *(
uöt32_t
 *Ë
De°ö©i⁄
 = *(
uöt16_t
 *Ë
RxTxBuf„r
[
EPn
].
TXB
;

84 
De°ö©i⁄
++;

85 
RxTxBuf„r
[
EPn
].
TXB
++;

88 
RxTxBuf„r
[
EPn
].
TXL
 -
Cou¡
;

89 
	}
}

91 
	$USB_SídD©a
(
uöt8_t
 
EPn
, 
uöt16_t
 *
D©a
, uöt16_à
Lígth
) {

93 i‡(
EPn
 > 0 && !
Devi˚C⁄figuªd
) {

97 
RxTxBuf„r
[
EPn
].
TXL
 = 
Lígth
;

99 
RxTxBuf„r
[
EPn
].
TXB
 = 
D©a
;

101 i‡(
Lígth
 > 0) {

102 
	`USB_Buf„r2PMA
(
EPn
);

104 
	`_SëEPTxCou¡
(
EPn
, 0);

107 
	`_SëEPTxVÆid
(
EPn
);

108 
	}
}

110 
	$USB_Shutdown
() {

111 
	`bô_£t
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPAEN
);

114 
	`NVIC_DißbÀIRQ
(
USB_LP_CAN1_RX0_IRQn
);

115 
	`_SëISTR
(0);

117 
Devi˚C⁄figuªd
 = 
Devi˚Sètus
 = 0;

119 
_EPH™dÀr
 = 
NULL
;

121 
_USBRe£tH™dÀr
 = 
NULL
;

124 
	`_SëCNTR
(0x03);

127 
	`bô_£t
(
GPIOA
->
CRH
, 
GPIO_CRH_CNF12_0
);

128 
	`bô_˛ór
(
GPIOA
->
CRH
, 
GPIO_CRH_CNF12_1
);

131 
	`bô_£t
(
GPIOA
->
CRH
, 
GPIO_CRH_MODE12
);

134 
GPIOA
->
BRR
 = 
GPIO_BRR_BR12
;

137 
	`bô_˛ór
(
RCC
->
APB1ENR
, 
RCC_APB1ENR_USBEN
);

138 
	}
}

140 
	$USB_Tu∫On
() {

141 
	`bô_£t
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPAEN
);

144 
	`bô_£t
(
GPIOA
->
CRH
, 
GPIO_CRH_CNF12_0
);

145 
	`bô_˛ór
(
GPIOA
->
CRH
, 
GPIO_CRH_CNF12_1
);

148 
	`bô_˛ór
(
GPIOA
->
CRH
, 
GPIO_CRH_MODE12
);

149 
	}
}

151 
USB_Inô
((*
EPH™dÀrPå
)(
uöt16_t
), (*
Re£tH™dÀrPå
)()) {

154 
i
 = 0; i < 
MAX_EP_NUM
; i++) {

155 
RxTxBuf„r
[
i
].
RXL
 = RxTxBuf„r[i].
TXL
 = 0;

158 
_EPH™dÀr
 = 
EPH™dÀrPå
;

159 
_USBRe£tH™dÀr
 = 
Re£tH™dÀrPå
;

161 
	`USB_Tu∫On
();

163 
Devi˚C⁄figuªd
 = 
Devi˚Sètus
 = 0;

165 
	`bô_£t
(
RCC
->
APB1ENR
, 
RCC_APB1ENR_USBEN
);

166 
	`NVIC_E«bÀIRQ
(
USB_LP_CAN1_RX0_IRQn
);

169 
	`_SëCNTR
(
CNTR_FRES
);

177 
	`_SëCNTR
(0);

180 !(
	`_GëISTR
(Ë& 
ISTR_RESET
));

183 
	`_SëISTR
(0);

186 
	`_SëCNTR
(
CNTR_CTRM
 | 
CNTR_RESETM
 | 
CNTR_SUSPM
 | 
CNTR_WKUPM
);

187 
	}
}

189 
uöt16_t
 
	$USB_IsDevi˚C⁄figuªd
() {

190  
Devi˚C⁄figuªd
;

191 
	}
}

193 
	$USB_LP_CAN1_RX0_IRQH™dÀr
() {

195 i‡(
	`_GëISTR
(Ë& 
ISTR_RESET
) {

196 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_RESET
);

197 if(
_USBRe£tH™dÀr
) {

198 
	`_USBRe£tH™dÀr
();

204 i‡(
	`_GëISTR
(Ë& 
ISTR_CTR
) {

205 if(
_EPH™dÀr
) {

206 
	`_EPH™dÀr
(
	`_GëISTR
());

208 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_CTR
);

213 i‡(
	`_GëISTR
(Ë& 
ISTR_DOVR
) {

214 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_DOVR
);

219 i‡(
	`_GëISTR
(Ë& 
ISTR_SUSP
) {

220 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_SUSP
);

223 i‡(
	`_GëDADDR
() & 0x007f) {

224 
	`_SëDADDR
(0);

225 
	`_SëCNTR
(
	`_GëCNTR
(Ë& ~
CNTR_SUSPM
);

232 i‡(
	`_GëISTR
(Ë& 
ISTR_ERR
) {

233 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_ERR
);

238 i‡(
	`_GëISTR
(Ë& 
ISTR_WKUP
) {

239 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_WKUP
);

244 i‡(
	`_GëISTR
(Ë& 
ISTR_SOF
) {

245 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_SOF
);

250 i‡(
	`_GëISTR
(Ë& 
ISTR_ESOF
) {

251 
	`_SëISTR
(
	`_GëISTR
(Ë& 
CLR_ESOF
);

256 
	`_SëISTR
(0);

257 
	}
}

	@/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/usb.h

19 #i‚de‡
USB_H_


20 
	#USB_H_


	)

23 
	#MAX_EP_NUM
 2

	)

26 
	#MAX_BUFFER_SIZE
 64

	)

29 
uöt16_t
 
	mRXB
[
MAX_BUFFER_SIZE
 / 2];

30 
uöt16_t
 *
	mTXB
;

31 
uöt8_t
 
	mRXL
;

32 
uöt8_t
 
	mTXL
;

33 
uöt8_t
 
	mMaxPackëSize
;

34 } 
	tUSB_RxTxBuf_t
;

36 
USB_RxTxBuf_t
 
RxTxBuf„r
[
MAX_EP_NUM
];

38 c⁄° 
uöt8_t
 
sdProdu˘
[0x2C];

39 c⁄° 
uöt8_t
 
sdVíd‹
[0x2A];

40 c⁄° 
uöt8_t
 
sdSîül
[0x16];

41 c⁄° 
uöt8_t
 
sdL™gID
[0x04];

44 
	#USB_REQUEST_GET_STATUS
 0x00

	)

45 
	#USB_REQUEST_CLEAR_FEATURE
 0x01

	)

46 
	#USB_REQUEST_SET_FEATURE
 0x03

	)

47 
	#USB_REQUEST_SET_ADDRESS
 0x05

	)

48 
	#USB_REQUEST_GET_DESCRIPTOR
 0x06

	)

49 
	#USB_REQUEST_SET_DESCRIPTOR
 0x07

	)

50 
	#USB_REQUEST_GET_CONFIGURATION
 0x08

	)

51 
	#USB_REQUEST_SET_CONFIGURATION
 0x09

	)

52 
	#USB_REQUEST_GET_INTERFACE
 0x0A

	)

53 
	#USB_REQUEST_SET_INTERFACE
 0x0B

	)

54 
	#USB_REQUEST_SYNC_FRAME
 0x0C

	)

57 
	#USB_DEVICE_DESC_TYPE
 0x01

	)

58 
	#USB_CFG_DESC_TYPE
 0x02

	)

59 
	#USB_STR_DESC_TYPE
 0x03

	)

60 
	#USB_IFACE_DESC_TYPE
 0x04

	)

61 
	#USB_EP_DESC_TYPE
 0x05

	)

62 
	#USB_DEVICE_QR_DESC_TYPE
 0x06

	)

63 
	#USB_OSPEED_CFG_DESC_TYPE
 0x07

	)

64 
	#USB_IFACE_PWR_DESC_TYPE
 0x08

	)

65 
	#USB_REPORT_DESC_TYPE
 0x22

	)

68 
uöt8_t
 
	mL
 :8;

69 
uöt8_t
 
	mH
 :8;

70 } 
	tUSB_WByã
;

73 
uöt8_t
 
	mbmReque°Ty≥
;

74 
uöt8_t
 
	mbReque°
;

75 
USB_WByã
 
	mwVÆue
;

76 
USB_WByã
 
	mwIndex
;

77 
uöt16_t
 
	mwLígth
;

78 } 
	tUSB_SëupPackë
;

82 
	e_EP_DBUF_DIR


85 
	mEP_DBUF_ERR
,

86 
	mEP_DBUF_OUT
,

87 
	mEP_DBUF_IN


88 }
	tEP_DBUF_DIR
;

91 
	eEP_BUF_NUM


93 
	mEP_NOBUF
,

94 
	mEP_BUF0
,

95 
	mEP_BUF1


99 
	#RegBa£
 (0x40005C00LË

	)

100 
	#PMAAddr
 (0x40006000LË

	)

107 
	#CNTR
 ((
__IO
 *)(
RegBa£
 + 0x40))

	)

109 
	#ISTR
 ((
__IO
 *)(
RegBa£
 + 0x44))

	)

111 
	#FNR
 ((
__IO
 *)(
RegBa£
 + 0x48))

	)

113 
	#DADDR
 ((
__IO
 *)(
RegBa£
 + 0x4C))

	)

115 
	#BTABLE
 ((
__IO
 *)(
RegBa£
 + 0x50))

	)

116 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


118 
	#LPMCSR
 (–
__IO
 *)(
RegBa£
 + 0x54))

	)

123 
	#EP0REG
 ((
__IO
 *)(
RegBa£
)Ë

	)

126 
	#EP0_OUT
 ((
uöt8_t
)0x00)

	)

127 
	#EP0_IN
 ((
uöt8_t
)0x80)

	)

128 
	#EP1_OUT
 ((
uöt8_t
)0x01)

	)

129 
	#EP1_IN
 ((
uöt8_t
)0x81)

	)

130 
	#EP2_OUT
 ((
uöt8_t
)0x02)

	)

131 
	#EP2_IN
 ((
uöt8_t
)0x82)

	)

132 
	#EP3_OUT
 ((
uöt8_t
)0x03)

	)

133 
	#EP3_IN
 ((
uöt8_t
)0x83)

	)

134 
	#EP4_OUT
 ((
uöt8_t
)0x04)

	)

135 
	#EP4_IN
 ((
uöt8_t
)0x84)

	)

136 
	#EP5_OUT
 ((
uöt8_t
)0x05)

	)

137 
	#EP5_IN
 ((
uöt8_t
)0x85)

	)

138 
	#EP6_OUT
 ((
uöt8_t
)0x06)

	)

139 
	#EP6_IN
 ((
uöt8_t
)0x86)

	)

140 
	#EP7_OUT
 ((
uöt8_t
)0x07)

	)

141 
	#EP7_IN
 ((
uöt8_t
)0x87)

	)

144 
	#ENDP0
 ((
uöt8_t
)0)

	)

145 
	#ENDP1
 ((
uöt8_t
)1)

	)

146 
	#ENDP2
 ((
uöt8_t
)2)

	)

147 
	#ENDP3
 ((
uöt8_t
)3)

	)

148 
	#ENDP4
 ((
uöt8_t
)4)

	)

149 
	#ENDP5
 ((
uöt8_t
)5)

	)

150 
	#ENDP6
 ((
uöt8_t
)6)

	)

151 
	#ENDP7
 ((
uöt8_t
)7)

	)

156 
	#ISTR_CTR
 (0x8000Ë

	)

157 
	#ISTR_DOVR
 (0x4000Ë

	)

158 
	#ISTR_ERR
 (0x2000Ë

	)

159 
	#ISTR_WKUP
 (0x1000Ë

	)

160 
	#ISTR_SUSP
 (0x0800Ë

	)

161 
	#ISTR_RESET
 (0x0400Ë

	)

162 
	#ISTR_SOF
 (0x0200Ë

	)

163 
	#ISTR_ESOF
 (0x0100Ë

	)

164 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


165 
	#ISTR_L1REQ
 (0x0080Ë

	)

167 
	#ISTR_DIR
 (0x0010Ë

	)

168 
	#ISTR_EP_ID
 (0x000FË

	)

170 
	#CLR_CTR
 (~
ISTR_CTR
Ë

	)

171 
	#CLR_DOVR
 (~
ISTR_DOVR
Ë

	)

172 
	#CLR_ERR
 (~
ISTR_ERR
Ë

	)

173 
	#CLR_WKUP
 (~
ISTR_WKUP
Ë

	)

174 
	#CLR_SUSP
 (~
ISTR_SUSP
Ë

	)

175 
	#CLR_RESET
 (~
ISTR_RESET
Ë

	)

176 
	#CLR_SOF
 (~
ISTR_SOF
Ë

	)

177 
	#CLR_ESOF
 (~
ISTR_ESOF
Ë

	)

178 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


179 
	#CLR_L1REQ
 (~
ISTR_L1REQ
Ë

	)

184 
	#CNTR_CTRM
 (0x8000Ë

	)

185 
	#CNTR_DOVRM
 (0x4000Ë

	)

186 
	#CNTR_ERRM
 (0x2000Ë

	)

187 
	#CNTR_WKUPM
 (0x1000Ë

	)

188 
	#CNTR_SUSPM
 (0x0800Ë

	)

189 
	#CNTR_RESETM
 (0x0400Ë

	)

190 
	#CNTR_SOFM
 (0x0200Ë

	)

191 
	#CNTR_ESOFM
 (0x0100Ë

	)

192 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


193 
	#CNTR_L1REQM
 (0x0080Ë

	)

194 
	#CNTR_L1RESUME
 (0x0020Ë

	)

196 
	#CNTR_RESUME
 (0x0010Ë

	)

197 
	#CNTR_FSUSP
 (0x0008Ë

	)

198 
	#CNTR_LPMODE
 (0x0004Ë

	)

199 
	#CNTR_PDWN
 (0x0002Ë

	)

200 
	#CNTR_FRES
 (0x0001Ë

	)

202 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


207 
	#LPMCSR_BESL
 ((
uöt16_t
)0x00F0Ë

	)

208 
	#LPMCSR_REMWAKE
 ((
uöt16_t
)0x0008Ë

	)

209 
	#LPMCSR_LPMACK
 ((
uöt16_t
)0x0002Ë

	)

210 
	#LPMCSR_LMPEN
 ((
uöt16_t
)0x0001Ë

	)

216 
	#FNR_RXDP
 (0x8000Ë

	)

217 
	#FNR_RXDM
 (0x4000Ë

	)

218 
	#FNR_LCK
 (0x2000Ë

	)

219 
	#FNR_LSOF
 (0x1800Ë

	)

220 
	#FNR_FN
 (0x07FFË

	)

224 
	#DADDR_EF
 (0x80)

	)

225 
	#DADDR_ADD
 (0x7F)

	)

230 
	#EP_CTR_RX
 (0x8000Ë

	)

231 
	#EP_DTOG_RX
 (0x4000Ë

	)

232 
	#EPRX_STAT
 (0x3000Ë

	)

233 
	#EP_SETUP
 (0x0800Ë

	)

234 
	#EP_T_FIELD
 (0x0600Ë

	)

235 
	#EP_KIND
 (0x0100Ë

	)

236 
	#EP_CTR_TX
 (0x0080Ë

	)

237 
	#EP_DTOG_TX
 (0x0040Ë

	)

238 
	#EPTX_STAT
 (0x0030Ë

	)

239 
	#EPADDR_FIELD
 (0x000FË

	)

242 
	#EPREG_MASK
 (
EP_CTR_RX
|
EP_SETUP
|
EP_T_FIELD
|
EP_KIND
|
EP_CTR_TX
|
EPADDR_FIELD
)

	)

245 
	#EP_TYPE_MASK
 (0x0600Ë

	)

246 
	#EP_BULK
 (0x0000Ë

	)

247 
	#EP_CONTROL
 (0x0200Ë

	)

248 
	#EP_ISOCHRONOUS
 (0x0400Ë

	)

249 
	#EP_INTERRUPT
 (0x0600Ë

	)

250 
	#EP_T_MASK
 (~
EP_T_FIELD
 & 
EPREG_MASK
)

	)

254 
	#EPKIND_MASK
 (~
EP_KIND
 & 
EPREG_MASK
)

	)

257 
	#EP_TX_DIS
 (0x0000Ë

	)

258 
	#EP_TX_STALL
 (0x0010Ë

	)

259 
	#EP_TX_NAK
 (0x0020Ë

	)

260 
	#EP_TX_VALID
 (0x0030Ë

	)

261 
	#EPTX_DTOG1
 (0x0010Ë

	)

262 
	#EPTX_DTOG2
 (0x0020Ë

	)

263 
	#EPTX_DTOGMASK
 (
EPTX_STAT
|
EPREG_MASK
)

	)

266 
	#EP_RX_DIS
 (0x0000Ë

	)

267 
	#EP_RX_STALL
 (0x1000Ë

	)

268 
	#EP_RX_NAK
 (0x2000Ë

	)

269 
	#EP_RX_VALID
 (0x3000Ë

	)

270 
	#EPRX_DTOG1
 (0x1000Ë

	)

271 
	#EPRX_DTOG2
 (0x2000Ë

	)

272 
	#EPRX_DTOGMASK
 (
EPRX_STAT
|
EPREG_MASK
)

	)

275 
	#_SëCNTR
(
wRegVÆue
Ë(*
CNTR
 = (
uöt16_t
)wRegVÆue)

	)

278 
	#_SëISTR
(
wRegVÆue
Ë(*
ISTR
 = (
uöt16_t
)wRegVÆue)

	)

281 
	#_SëDADDR
(
wRegVÆue
Ë(*
DADDR
 = (
uöt16_t
)wRegVÆue)

	)

284 
	#_SëBTABLE
(
wRegVÆue
)(*
BTABLE
 = (
uöt16_t
)(wRegVÆuê& 0xFFF8))

	)

287 
	#_SëLPMCSR
(
wRegVÆue
Ë(*
LPMCSR
 = (
uöt16_t
)wRegVÆue)

	)

290 
	#_GëCNTR
(Ë((
uöt16_t
Ë*
CNTR
)

	)

293 
	#_GëISTR
(Ë((
uöt16_t
Ë*
ISTR
)

	)

296 
	#_GëFNR
(Ë((
uöt16_t
Ë*
FNR
)

	)

299 
	#_GëDADDR
(Ë((
uöt16_t
Ë*
DADDR
)

	)

302 
	#_GëBTABLE
(Ë((
uöt16_t
Ë*
BTABLE
)

	)

305 
	#_GëLPMCSR
(Ë((
uöt16_t
Ë*
LPMCSR
)

	)

308 
	#_SëENDPOINT
(
bEpNum
,
wRegVÆue
Ë(*(
EP0REG
 + bEpNum)= \

309 (
uöt16_t
)
wRegVÆue
)

	)

312 
	#_GëENDPOINT
(
bEpNum
Ë((
uöt16_t
)(*(
EP0REG
 + bEpNum)))

	)

322 
	#_SëEPTy≥
(
bEpNum
,
wTy≥
Ë(
	`_SëENDPOINT
(bEpNum,\

323 ((
	`_GëENDPOINT
(
bEpNum
Ë& 
EP_T_MASK
Ë| 
wTy≥
 )))

	)

332 
	#_GëEPTy≥
(
bEpNum
Ë(
	`_GëENDPOINT
(bEpNumË& 
EP_T_FIELD
)

	)

342 
	#_SëEPTxSètus
(
bEpNum
,
wSèã
) {\

343 
uöt16_t
 
_wRegVÆ
; \

344 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& 
EPTX_DTOGMASK
;\

346 if((
EPTX_DTOG1
 & 
wSèã
)!= 0) \

347 
_wRegVÆ
 ^
EPTX_DTOG1
; \

349 if((
EPTX_DTOG2
 & 
wSèã
)!= 0) \

350 
_wRegVÆ
 ^
EPTX_DTOG2
; \

351 
	`_SëENDPOINT
(
bEpNum
, (
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
)); \

352 }

	)

362 
	#_SëEPRxSètus
(
bEpNum
,
wSèã
) {\

363 
uöt16_t
 
_wRegVÆ
; \

365 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& 
EPRX_DTOGMASK
;\

367 if((
EPRX_DTOG1
 & 
wSèã
)!= 0) \

368 
_wRegVÆ
 ^
EPRX_DTOG1
; \

370 if((
EPRX_DTOG2
 & 
wSèã
)!= 0) \

371 
_wRegVÆ
 ^
EPRX_DTOG2
; \

372 
	`_SëENDPOINT
(
bEpNum
, (
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
)); \

373 }

	)

384 
	#_SëEPRxTxSètus
(
bEpNum
,
wSèãrx
,
wSèãtx
) {\

385 
uöt32_t
 
_wRegVÆ
; \

387 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& (
EPRX_DTOGMASK
 |
EPTX_STAT
) ;\

389 if((
EPRX_DTOG1
 & 
wSèãrx
)!= 0) \

390 
_wRegVÆ
 ^
EPRX_DTOG1
; \

392 if((
EPRX_DTOG2
 & 
wSèãrx
)!= 0) \

393 
_wRegVÆ
 ^
EPRX_DTOG2
; \

395 if((
EPTX_DTOG1
 & 
wSèãtx
)!= 0) \

396 
_wRegVÆ
 ^
EPTX_DTOG1
; \

398 if((
EPTX_DTOG2
 & 
wSèãtx
)!= 0) \

399 
_wRegVÆ
 ^
EPTX_DTOG2
; \

400 
	`_SëENDPOINT
(
bEpNum
, 
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
); \

401 }

	)

410 
	#_GëEPTxSètus
(
bEpNum
Ë((
uöt16_t
)
	`_GëENDPOINT
(bEpNumË& 
EPTX_STAT
)

	)

412 
	#_GëEPRxSètus
(
bEpNum
Ë((
uöt16_t
)
	`_GëENDPOINT
(bEpNumË& 
EPRX_STAT
)

	)

421 
	#_SëEPTxVÆid
(
bEpNum
Ë(
	`_SëEPTxSètus
(bEpNum, 
EP_TX_VALID
))

	)

423 
	#_SëEPRxVÆid
(
bEpNum
Ë(
	`_SëEPRxSètus
(bEpNum, 
EP_RX_VALID
))

	)

432 
	#_GëTxSèŒSètus
(
bEpNum
Ë(
	`_GëEPTxSètus
(bEpNum) \

433 =
EP_TX_STALL
)

	)

434 
	#_GëRxSèŒSètus
(
bEpNum
Ë(
	`_GëEPRxSètus
(bEpNum) \

435 =
EP_RX_STALL
)

	)

444 
	#_SëEP_KIND
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

445 (
EP_CTR_RX
|
EP_CTR_TX
|((
	`_GëENDPOINT
(
bEpNum
Ë| 
EP_KIND
Ë& 
EPREG_MASK
))))

	)

446 
	#_CÀ¨EP_KIND
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

447 (
EP_CTR_RX
|
EP_CTR_TX
|(
	`_GëENDPOINT
(
bEpNum
Ë& 
EPKIND_MASK
))))

	)

456 
	#_Së_Sètus_Out
(
bEpNum
Ë
	`_SëEP_KIND
(bEpNum)

	)

457 
	#_CÀ¨_Sètus_Out
(
bEpNum
Ë
	`_CÀ¨EP_KIND
(bEpNum)

	)

466 
	#_SëEPDoubÀBuff
(
bEpNum
Ë
	`_SëEP_KIND
(bEpNum)

	)

467 
	#_CÀ¨EPDoubÀBuff
(
bEpNum
Ë
	`_CÀ¨EP_KIND
(bEpNum)

	)

476 
	#_CÀ¨EP_CTR_RX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum,\

477 
	`_GëENDPOINT
(
bEpNum
Ë& 0x7FFF & 
EPREG_MASK
))

	)

478 
	#_CÀ¨EP_CTR_TX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum,\

479 
	`_GëENDPOINT
(
bEpNum
Ë& 0xFF7F & 
EPREG_MASK
))

	)

488 
	#_ToggÀDTOG_RX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

489 
EP_CTR_RX
|
EP_CTR_TX
|
EP_DTOG_RX
 | (
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
)))

	)

490 
	#_ToggÀDTOG_TX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

491 
EP_CTR_RX
|
EP_CTR_TX
|
EP_DTOG_TX
 | (
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
)))

	)

500 
	#_CÀ¨DTOG_RX
(
bEpNum
Ëif((
	`_GëENDPOINT
(bEpNumË& 
EP_DTOG_RX
) != 0)\

501 
	`_ToggÀDTOG_RX
(
bEpNum
)

	)

502 
	#_CÀ¨DTOG_TX
(
bEpNum
Ëif((
	`_GëENDPOINT
(bEpNumË& 
EP_DTOG_TX
) != 0)\

503 
	`_ToggÀDTOG_TX
(
bEpNum
)

	)

512 
	#_SëEPAddªss
(
bEpNum
,
bAddr
Ë
	`_SëENDPOINT
(bEpNum,\

513 
EP_CTR_RX
|
EP_CTR_TX
|(
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
Ë| 
bAddr
)

	)

522 
	#_GëEPAddªss
(
bEpNum
Ë((
uöt8_t
)(
	`_GëENDPOINT
(bEpNumË& 
EPADDR_FIELD
))

	)

523 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


524 
	#_pEPTxAddr
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8Ë+ 
PMAAddr
))

	)

525 
	#_pEPTxCou¡
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+2Ë+ 
PMAAddr
))

	)

526 
	#_pEPRxAddr
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+4Ë+ 
PMAAddr
))

	)

527 
	#_pEPRxCou¡
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+6Ë+ 
PMAAddr
))

	)

530 
	#_pEPTxAddr
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8 )*2 + 
PMAAddr
))

	)

531 
	#_pEPTxCou¡
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+2)*2 + 
PMAAddr
))

	)

532 
	#_pEPRxAddr
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+4)*2 + 
PMAAddr
))

	)

533 
	#_pEPRxCou¡
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+6)*2 + 
PMAAddr
))

	)

544 
	#_SëEPTxAddr
(
bEpNum
,
wAddr
Ë(*
	`_pEPTxAddr
(bEpNumË((wAdd∏>> 1Ë<< 1))

	)

545 
	#_SëEPRxAddr
(
bEpNum
,
wAddr
Ë(*
	`_pEPRxAddr
(bEpNumË((wAdd∏>> 1Ë<< 1))

	)

554 
	#_GëEPTxAddr
(
bEpNum
Ë((
uöt16_t
)*
	`_pEPTxAddr
(bEpNum))

	)

555 
	#_GëEPRxAddr
(
bEpNum
Ë((
uöt16_t
)*
	`_pEPRxAddr
(bEpNum))

	)

565 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


566 
	#_BlocksOf32
(
dwReg
,
wCou¡
,
wNBlocks
) {\

567 
wNBlocks
 = 
wCou¡
 >> 5;\

568 if((
wCou¡
 & 0x1f) == 0)\

569 
wNBlocks
--;\

570 *
pdwReg
 = (
uöt16_t
)((
wNBlocks
 << 10) | 0x8000);\

571 }

	)

573 
	#_BlocksOf32
(
dwReg
,
wCou¡
,
wNBlocks
) {\

574 
wNBlocks
 = 
wCou¡
 >> 5;\

575 if((
wCou¡
 & 0x1f) == 0)\

576 
wNBlocks
--;\

577 *
pdwReg
 = (
uöt32_t
)((
wNBlocks
 << 10) | 0x8000);\

578 }

	)

581 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


582 
	#_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
) {\

583 
wNBlocks
 = 
wCou¡
 >> 1;\

584 if((
wCou¡
 & 0x1) != 0)\

585 
wNBlocks
++;\

586 *
pdwReg
 = (
uöt16_t
)(
wNBlocks
 << 10);\

587 }

	)

589 
	#_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
) {\

590 
wNBlocks
 = 
wCou¡
 >> 1;\

591 if((
wCou¡
 & 0x1) != 0)\

592 
wNBlocks
++;\

593 *
pdwReg
 = (
uöt32_t
)(
wNBlocks
 << 10);\

594 }

	)

597 
	#_SëEPCou¡RxReg
(
dwReg
,
wCou¡
) {\

598 
uöt16_t
 
wNBlocks
;\

599 if(
wCou¡
 > 62){
	`_BlocksOf32
(
dwReg
,wCou¡,
wNBlocks
);}\

600 {
	`_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
);}\

601 }

	)

603 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


604 
	#_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
) {\

605 
uöt16_t
 *
pdwReg
 = 
	`_pEPTxCou¡
(
bEpNum
); \

606 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

607 }

	)

609 
	#_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
) {\

610 
uöt32_t
 *
pdwReg
 = 
	`_pEPTxCou¡
(
bEpNum
); \

611 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

612 }

	)

622 
	#_SëEPTxCou¡
(
bEpNum
,
wCou¡
Ë(*
	`_pEPTxCou¡
(bEpNumËwCou¡)

	)

623 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


624 
	#_SëEPRxCou¡
(
bEpNum
,
wCou¡
) {\

625 
uöt16_t
 *
pdwReg
 = 
	`_pEPRxCou¡
(
bEpNum
); \

626 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

627 }

	)

629 
	#_SëEPRxCou¡
(
bEpNum
,
wCou¡
) {\

630 
uöt32_t
 *
pdwReg
 = 
	`_pEPRxCou¡
(
bEpNum
); \

631 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

632 }

	)

641 
	#_GëEPTxCou¡
(
bEpNum
)((
uöt16_t
)(*
	`_pEPTxCou¡
(bEpNum)Ë& 0x3ff)

	)

642 
	#_GëEPRxCou¡
(
bEpNum
)((
uöt16_t
)(*
	`_pEPRxCou¡
(bEpNum)Ë& 0x3ff)

	)

652 
	#_SëEPDblBuf0Addr
(
bEpNum
,
wBuf0Addr
Ë{
	`_SëEPTxAddr
(bEpNum, wBuf0Addr);}

	)

653 
	#_SëEPDblBuf1Addr
(
bEpNum
,
wBuf1Addr
Ë{
	`_SëEPRxAddr
(bEpNum, wBuf1Addr);}

	)

664 
	#_SëEPDblBuffAddr
(
bEpNum
,
wBuf0Addr
,
wBuf1Addr
) { \

665 
	`_SëEPDblBuf0Addr
(
bEpNum
, 
wBuf0Addr
);\

666 
	`_SëEPDblBuf1Addr
(
bEpNum
, 
wBuf1Addr
);\

667 }

	)

676 
	#_GëEPDblBuf0Addr
(
bEpNum
Ë(
	`_GëEPTxAddr
(bEpNum))

	)

677 
	#_GëEPDblBuf1Addr
(
bEpNum
Ë(
	`_GëEPRxAddr
(bEpNum))

	)

689 
	#_SëEPDblBuf0Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
) { \

690 if(
bDú
 =
EP_DBUF_OUT
)\

692 {
	`_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
);} \

693 if(
bDú
 =
EP_DBUF_IN
)\

695 *
	`_pEPTxCou¡
(
bEpNum
Ë(
uöt32_t
)
wCou¡
; \

696 }

	)

698 
	#_SëEPDblBuf1Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
) { \

699 if(
bDú
 =
EP_DBUF_OUT
)\

701 {
	`_SëEPRxCou¡
(
bEpNum
,
wCou¡
);}\

702 if(
bDú
 =
EP_DBUF_IN
)\

704 *
	`_pEPRxCou¡
(
bEpNum
Ë(
uöt32_t
)
wCou¡
; \

705 }

	)

707 
	#_SëEPDblBuffCou¡
(
bEpNum
, 
bDú
, 
wCou¡
) {\

708 
	`_SëEPDblBuf0Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
); \

709 
	`_SëEPDblBuf1Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
); \

710 }

	)

719 
	#_GëEPDblBuf0Cou¡
(
bEpNum
Ë(
	`_GëEPTxCou¡
(bEpNum))

	)

720 
	#_GëEPDblBuf1Cou¡
(
bEpNum
Ë(
	`_GëEPRxCou¡
(bEpNum))

	)

724 
USB_Inô
((*
EPH™dÀrPå
)(
uöt16_t
), (*
Re£tH™dÀrPå
)());

725 
	`USB_Shutdown
();

726 
	`USB_PMA2Buf„r
(
uöt8_t
 
EPn
);

727 
	`USB_Buf„r2PMA
(
uöt8_t
 
EPn
);

728 
	`USB_SídD©a
(
uöt8_t
 
EPn
, 
uöt16_t
 *
D©a
, uöt16_à
Lígth
);

729 
uöt16_t
 
	`USB_IsDevi˚C⁄figuªd
();

	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

213 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

214 
__f
)

215 
__THROW
 
	`__n⁄nuŒ
 ((3));

217 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

218 
__f
)

219 
__THROW
 
	`__n⁄nuŒ
 ((3));

221 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

222 
__f
)

223 
__THROW
 
	`__n⁄nuŒ
 ((3));

226 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

227 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

228 
_Flﬂt16
 
__f
)

229 
__THROW
 
	`__n⁄nuŒ
 ((3));

232 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

233 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

234 
_Flﬂt32
 
__f
)

235 
__THROW
 
	`__n⁄nuŒ
 ((3));

238 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

239 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

240 
_Flﬂt64
 
__f
)

241 
__THROW
 
	`__n⁄nuŒ
 ((3));

244 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

245 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

246 
_Flﬂt128
 
__f
)

247 
__THROW
 
	`__n⁄nuŒ
 ((3));

250 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

251 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

252 
_Flﬂt32x
 
__f
)

253 
__THROW
 
	`__n⁄nuŒ
 ((3));

256 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

257 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

258 
_Flﬂt64x
 
__f
)

259 
__THROW
 
	`__n⁄nuŒ
 ((3));

262 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

263 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

264 
_Flﬂt128x
 
__f
)

265 
__THROW
 
	`__n⁄nuŒ
 ((3));

269 #ifde‡
__USE_GNU


273 
	~<bôs/ty≥s/loˇÀ_t.h
>

275 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

276 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

277 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

279 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
,

281 
__ba£
, 
loˇÀ_t
 
__loc
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

284 
__exãnsi⁄__


285 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

287 
loˇÀ_t
 
__loc
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

290 
__exãnsi⁄__


291 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

292 **
__ª°ri˘
 
__íd±r
,

293 
__ba£
, 
loˇÀ_t
 
__loc
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

296 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

297 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

300 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

301 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

304 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
,

306 
loˇÀ_t
 
__loc
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

309 #i‡
__HAVE_FLOAT16


310 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

311 **
__ª°ri˘
 
__íd±r
,

312 
loˇÀ_t
 
__loc
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

316 #i‡
__HAVE_FLOAT32


317 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

318 **
__ª°ri˘
 
__íd±r
,

319 
loˇÀ_t
 
__loc
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

323 #i‡
__HAVE_FLOAT64


324 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

325 **
__ª°ri˘
 
__íd±r
,

326 
loˇÀ_t
 
__loc
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

330 #i‡
__HAVE_FLOAT128


331 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

332 **
__ª°ri˘
 
__íd±r
,

333 
loˇÀ_t
 
__loc
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

337 #i‡
__HAVE_FLOAT32X


338 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

339 **
__ª°ri˘
 
__íd±r
,

340 
loˇÀ_t
 
__loc
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

344 #i‡
__HAVE_FLOAT64X


345 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

346 **
__ª°ri˘
 
__íd±r
,

347 
loˇÀ_t
 
__loc
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

351 #i‡
__HAVE_FLOAT128X


352 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

353 **
__ª°ri˘
 
__íd±r
,

354 
loˇÀ_t
 
__loc
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

360 #ifde‡
__USE_EXTERN_INLINES


361 
__exã∫_ölöe
 

362 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

364  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

365 
	}
}

366 
__exã∫_ölöe
 

367 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

369  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

370 
	}
}

372 #ifde‡
__USE_ISOC99


373 
__exãnsi⁄__
 
__exã∫_ölöe
 

374 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

376  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

377 
	}
}

382 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


386 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

389 
	$a64l
 (c⁄° *
__s
)

390 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

394 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


395 
	~<sys/ty≥s.h
>

402 
	$øndom
 (Ë
__THROW
;

405 
	$§™dom
 (
__£ed
Ë
__THROW
;

411 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

412 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

416 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

419 #ifde‡
__USE_MISC


424 
	søndom_d©a


426 
öt32_t
 *
Âå
;

427 
öt32_t
 *
Ωå
;

428 
öt32_t
 *
°©e
;

429 
ønd_ty≥
;

430 
ønd_deg
;

431 
ønd_£p
;

432 
öt32_t
 *
íd_±r
;

435 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

436 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

442 
size_t
 
__°©ñí
,

443 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

444 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

447 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

448 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$ønd
 (Ë
__THROW
;

456 
	$§™d
 (
__£ed
Ë
__THROW
;

458 #ifde‡
__USE_POSIX199506


460 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

464 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


468 
	$dønd48
 (Ë
__THROW
;

469 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

472 
	$Ã™d48
 (Ë
__THROW
;

473 
	$ƒ™d48
 (
__xsubi
[3])

474 
__THROW
 
	`__n⁄nuŒ
 ((1));

477 
	$mønd48
 (Ë
__THROW
;

478 
	$jønd48
 (
__xsubi
[3])

479 
__THROW
 
	`__n⁄nuŒ
 ((1));

482 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

483 *
	$£ed48
 (
__£ed16v
[3])

484 
__THROW
 
	`__n⁄nuŒ
 ((1));

485 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

487 #ifde‡
__USE_MISC


491 
	sdønd48_d©a


493 
__x
[3];

494 
__ﬁd_x
[3];

495 
__c
;

496 
__öô
;

497 
__exãnsi⁄__
 
__a
;

502 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

503 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 
	$î™d48_r
 (
__xsubi
[3],

505 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

506 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

509 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

510 *
__ª°ri˘
 
__ªsu…
)

511 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

512 
	$ƒ™d48_r
 (
__xsubi
[3],

513 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

514 *
__ª°ri˘
 
__ªsu…
)

515 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

518 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

519 *
__ª°ri˘
 
__ªsu…
)

520 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

521 
	$jønd48_r
 (
__xsubi
[3],

522 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

523 *
__ª°ri˘
 
__ªsu…
)

524 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

527 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

528 
__THROW
 
	`__n⁄nuŒ
 ((2));

530 
	$£ed48_r
 (
__£ed16v
[3],

531 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$lc⁄g48_r
 (
__∑øm
[7],

534 
dønd48_d©a
 *
__buf„r
)

535 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

538 
__uöt32_t
 
	$¨c4øndom
 ()

539 
__THROW
 
__wur
;

542 
	$¨c4øndom_buf
 (*
__buf
, 
size_t
 
__size
)

543 
__THROW
 
	`__n⁄nuŒ
 ((1));

547 
__uöt32_t
 
	$¨c4øndom_unif‹m
 (
__uöt32_t
 
__uµî_bound
)

548 
__THROW
 
__wur
;

553 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


554 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

556 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

557 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

564 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

565 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

568 
	$‰ì
 (*
__±r
Ë
__THROW
;

570 #ifde‡
__USE_MISC


576 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

577 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


578 
	`__©åibuã_Æloc_size__
 ((2, 3))

579 
__©å_dóŒoc_‰ì
;

582 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

583 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

586 #ifde‡
__USE_MISC


587 
	~<Æloˇ.h
>

590 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

591 || 
deföed
 
__USE_MISC


593 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


594 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

597 #ifde‡
__USE_XOPEN2K


599 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

600 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

603 #ifde‡
__USE_ISOC11


605 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

606 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

607 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

611 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

615 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

617 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


619 #ifde‡
__˝lu•lus


620 "C++" 
	`©_quick_exô
 ((*
__func
) ())

621 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

623 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

627 #ifdef 
__USE_MISC


630 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

631 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

639 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


643 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

646 #ifde‡
__USE_ISOC99


649 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_GNU


659 *
	$£cuª_gëív
 (c⁄° *
__«me
)

660 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

663 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


667 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

670 #ifde‡
__USE_XOPEN2K


673 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

674 
__THROW
 
	`__n⁄nuŒ
 ((2));

677 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

680 #ifdef 
__USE_MISC


684 
	$˛óªnv
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_MISC
 \

689 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

695 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

698 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


707 #i‚de‡
__USE_FILE_OFFSET64


708 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

710 #ifde‡
__REDIRECT


711 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

712 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

714 
	#mk°emp
 
mk°emp64


	)

717 #ifde‡
__USE_LARGEFILE64


718 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_MISC


729 #i‚de‡
__USE_FILE_OFFSET64


730 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

732 #ifde‡
__REDIRECT


733 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

734 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

736 
	#mk°emps
 
mk°emps64


	)

739 #ifde‡
__USE_LARGEFILE64


740 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

741 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 #ifde‡
__USE_XOPEN2K8


751 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

754 #ifde‡
__USE_GNU


761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

764 #ifde‡
__REDIRECT


765 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

766 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

768 
	#mko°emp
 
mko°emp64


	)

771 #ifde‡
__USE_LARGEFILE64


772 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 #i‚de‡
__USE_FILE_OFFSET64


782 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

783 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

785 #ifde‡
__REDIRECT


786 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

787 
__Êags
), 
mko°emps64
)

788 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

790 
	#mko°emps
 
mko°emps64


	)

793 #ifde‡
__USE_LARGEFILE64


794 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

795 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

804 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

807 #ifdef 
__USE_GNU


810 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


812 
__©å_dóŒoc_‰ì
 
__wur
;

815 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


821 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

822 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

827 #i‚de‡
__COMPAR_FN_T


828 
	#__COMPAR_FN_T


	)

829 (*
	t__com∑r_‚_t
) (const *, const *);

831 #ifdef 
__USE_GNU


832 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

835 #ifde‡
__USE_GNU


836 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

841 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

842 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

843 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

845 #ifde‡
__USE_EXTERN_INLINES


846 
	~<bôs/°dlib-b£¨ch.h
>

851 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

852 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

853 #ifde‡
__USE_GNU


854 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

855 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

856 
	`__n⁄nuŒ
 ((1, 4));

861 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

862 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #ifde‡
__USE_ISOC99


865 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

866 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

873 
div_t
 
	$div
 (
__numî
, 
__díom
)

874 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

875 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

876 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

878 #ifde‡
__USE_ISOC99


879 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

880 
__díom
)

881 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

885 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

886 || 
deföed
 
__USE_MISC


893 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

894 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

899 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

905 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

906 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

909 #ifde‡
__USE_MISC


911 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

912 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

914 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

915 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

917 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

918 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

923 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

924 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

925 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

926 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

927 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

928 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

930 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

931 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

932 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

933 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

934 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

935 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

936 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

937 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

943 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

946 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

947 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

950 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

954 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

955 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


956 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

958 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

959 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

960 
__THROW


961 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

962 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

964 #ifde‡
__USE_MISC


969 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

973 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


980 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

981 *c⁄° *
__ª°ri˘
 
__tokís
,

982 **
__ª°ri˘
 
__vÆuï
)

983 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

989 #ifde‡
__USE_XOPEN2KXSI


991 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

994 #ifde‡
__USE_XOPEN_EXTENDED


999 
	$gø¡±
 (
__fd
Ë
__THROW
;

1003 
	$u∆ock±
 (
__fd
Ë
__THROW
;

1008 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

1011 #ifde‡
__USE_GNU


1015 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1019 
	`gë±
 ();

1022 #ifde‡
__USE_MISC


1026 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1033 
	$ây¶Ÿ
 (Ë
__THROW
;

1036 
	~<bôs/°dlib-Êﬂt.h
>

1039 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1040 
	~<bôs/°dlib.h
>

1043 
	~<bôs/Êﬂä.h
>

1044 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1045 
	~<bôs/°dlib-ldbl.h
>

1048 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_GNU


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_GNU


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_GNU


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifdef 
__USE_GNU


506 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

507 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

510 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

513 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

514 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

516 #i‚de‡
ba£«me


521 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


522 "C++" *
	$ba£«me
 (*
__fûíame
)

523 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

524 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

525 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

527 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #i‡
	`__GNUC_PREREQ
 (3,4)

533 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


535 
	~<bôs/°rög_f‹tifõd.h
>

539 
__END_DECLS


	@bitwise.h

19 #i‚de‡
BITWISE_H_


20 
	#BITWISE_H_


	)

22 
	#bô_£t
(
p
,
m
Ë(’Ë|(m))

	)

23 
	#bô_˛ór
(
p
,
m
Ë(’Ë&~(m))

	)

24 
	#bô_wrôe
(
c
,
p
,
m
Ë(¯? 
	`bô_£t
’,mË: 
	`bô_˛ór
’,m))

	)

25 
	#bô_check
(
vÆue
, 
bô
Ë(((vÆueË>> (bô)Ë& 0x01)

	)

	@hid.h

19 #i‚de‡
HID_H_


20 
	#HID_H_


	)

22 
HIDUSB_Re£t
();

23 
HIDUSB_EPH™dÀr
(
uöt16_t
 
Sètus
);

25 
__©åibuã__
((
wók
)Ë
HIDUSB_D©aRe˚ivedH™dÀr
(
uöt16_t
 *
D©a
,

26 
uöt16_t
 
Lígth
);

	@led.h

19 #i‚de‡
LED_H_


20 
	#LED_H_


	)

22 
Àd_⁄
();

23 
Àd_off
();

24 
Àd_öô
();

	@usb.h

19 #i‚de‡
USB_H_


20 
	#USB_H_


	)

23 
	#MAX_EP_NUM
 2

	)

26 
	#MAX_BUFFER_SIZE
 64

	)

29 
uöt16_t
 
	mRXB
[
MAX_BUFFER_SIZE
 / 2];

30 
uöt16_t
 *
	mTXB
;

31 
uöt8_t
 
	mRXL
;

32 
uöt8_t
 
	mTXL
;

33 
uöt8_t
 
	mMaxPackëSize
;

34 } 
	tUSB_RxTxBuf_t
;

36 
USB_RxTxBuf_t
 
RxTxBuf„r
[
MAX_EP_NUM
];

38 c⁄° 
uöt8_t
 
sdProdu˘
[0x2C];

39 c⁄° 
uöt8_t
 
sdVíd‹
[0x2A];

40 c⁄° 
uöt8_t
 
sdSîül
[0x16];

41 c⁄° 
uöt8_t
 
sdL™gID
[0x04];

44 
	#USB_REQUEST_GET_STATUS
 0x00

	)

45 
	#USB_REQUEST_CLEAR_FEATURE
 0x01

	)

46 
	#USB_REQUEST_SET_FEATURE
 0x03

	)

47 
	#USB_REQUEST_SET_ADDRESS
 0x05

	)

48 
	#USB_REQUEST_GET_DESCRIPTOR
 0x06

	)

49 
	#USB_REQUEST_SET_DESCRIPTOR
 0x07

	)

50 
	#USB_REQUEST_GET_CONFIGURATION
 0x08

	)

51 
	#USB_REQUEST_SET_CONFIGURATION
 0x09

	)

52 
	#USB_REQUEST_GET_INTERFACE
 0x0A

	)

53 
	#USB_REQUEST_SET_INTERFACE
 0x0B

	)

54 
	#USB_REQUEST_SYNC_FRAME
 0x0C

	)

57 
	#USB_DEVICE_DESC_TYPE
 0x01

	)

58 
	#USB_CFG_DESC_TYPE
 0x02

	)

59 
	#USB_STR_DESC_TYPE
 0x03

	)

60 
	#USB_IFACE_DESC_TYPE
 0x04

	)

61 
	#USB_EP_DESC_TYPE
 0x05

	)

62 
	#USB_DEVICE_QR_DESC_TYPE
 0x06

	)

63 
	#USB_OSPEED_CFG_DESC_TYPE
 0x07

	)

64 
	#USB_IFACE_PWR_DESC_TYPE
 0x08

	)

65 
	#USB_REPORT_DESC_TYPE
 0x22

	)

68 
uöt8_t
 
	mL
 :8;

69 
uöt8_t
 
	mH
 :8;

70 } 
	tUSB_WByã
;

73 
uöt8_t
 
	mbmReque°Ty≥
;

74 
uöt8_t
 
	mbReque°
;

75 
USB_WByã
 
	mwVÆue
;

76 
USB_WByã
 
	mwIndex
;

77 
uöt16_t
 
	mwLígth
;

78 } 
	tUSB_SëupPackë
;

82 
	e_EP_DBUF_DIR


85 
	mEP_DBUF_ERR
,

86 
	mEP_DBUF_OUT
,

87 
	mEP_DBUF_IN


88 }
	tEP_DBUF_DIR
;

91 
	eEP_BUF_NUM


93 
	mEP_NOBUF
,

94 
	mEP_BUF0
,

95 
	mEP_BUF1


99 
	#RegBa£
 (0x40005C00LË

	)

100 
	#PMAAddr
 (0x40006000LË

	)

107 
	#CNTR
 ((
__IO
 *)(
RegBa£
 + 0x40))

	)

109 
	#ISTR
 ((
__IO
 *)(
RegBa£
 + 0x44))

	)

111 
	#FNR
 ((
__IO
 *)(
RegBa£
 + 0x48))

	)

113 
	#DADDR
 ((
__IO
 *)(
RegBa£
 + 0x4C))

	)

115 
	#BTABLE
 ((
__IO
 *)(
RegBa£
 + 0x50))

	)

116 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


118 
	#LPMCSR
 (–
__IO
 *)(
RegBa£
 + 0x54))

	)

123 
	#EP0REG
 ((
__IO
 *)(
RegBa£
)Ë

	)

126 
	#EP0_OUT
 ((
uöt8_t
)0x00)

	)

127 
	#EP0_IN
 ((
uöt8_t
)0x80)

	)

128 
	#EP1_OUT
 ((
uöt8_t
)0x01)

	)

129 
	#EP1_IN
 ((
uöt8_t
)0x81)

	)

130 
	#EP2_OUT
 ((
uöt8_t
)0x02)

	)

131 
	#EP2_IN
 ((
uöt8_t
)0x82)

	)

132 
	#EP3_OUT
 ((
uöt8_t
)0x03)

	)

133 
	#EP3_IN
 ((
uöt8_t
)0x83)

	)

134 
	#EP4_OUT
 ((
uöt8_t
)0x04)

	)

135 
	#EP4_IN
 ((
uöt8_t
)0x84)

	)

136 
	#EP5_OUT
 ((
uöt8_t
)0x05)

	)

137 
	#EP5_IN
 ((
uöt8_t
)0x85)

	)

138 
	#EP6_OUT
 ((
uöt8_t
)0x06)

	)

139 
	#EP6_IN
 ((
uöt8_t
)0x86)

	)

140 
	#EP7_OUT
 ((
uöt8_t
)0x07)

	)

141 
	#EP7_IN
 ((
uöt8_t
)0x87)

	)

144 
	#ENDP0
 ((
uöt8_t
)0)

	)

145 
	#ENDP1
 ((
uöt8_t
)1)

	)

146 
	#ENDP2
 ((
uöt8_t
)2)

	)

147 
	#ENDP3
 ((
uöt8_t
)3)

	)

148 
	#ENDP4
 ((
uöt8_t
)4)

	)

149 
	#ENDP5
 ((
uöt8_t
)5)

	)

150 
	#ENDP6
 ((
uöt8_t
)6)

	)

151 
	#ENDP7
 ((
uöt8_t
)7)

	)

156 
	#ISTR_CTR
 (0x8000Ë

	)

157 
	#ISTR_DOVR
 (0x4000Ë

	)

158 
	#ISTR_ERR
 (0x2000Ë

	)

159 
	#ISTR_WKUP
 (0x1000Ë

	)

160 
	#ISTR_SUSP
 (0x0800Ë

	)

161 
	#ISTR_RESET
 (0x0400Ë

	)

162 
	#ISTR_SOF
 (0x0200Ë

	)

163 
	#ISTR_ESOF
 (0x0100Ë

	)

164 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


165 
	#ISTR_L1REQ
 (0x0080Ë

	)

167 
	#ISTR_DIR
 (0x0010Ë

	)

168 
	#ISTR_EP_ID
 (0x000FË

	)

170 
	#CLR_CTR
 (~
ISTR_CTR
Ë

	)

171 
	#CLR_DOVR
 (~
ISTR_DOVR
Ë

	)

172 
	#CLR_ERR
 (~
ISTR_ERR
Ë

	)

173 
	#CLR_WKUP
 (~
ISTR_WKUP
Ë

	)

174 
	#CLR_SUSP
 (~
ISTR_SUSP
Ë

	)

175 
	#CLR_RESET
 (~
ISTR_RESET
Ë

	)

176 
	#CLR_SOF
 (~
ISTR_SOF
Ë

	)

177 
	#CLR_ESOF
 (~
ISTR_ESOF
Ë

	)

178 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


179 
	#CLR_L1REQ
 (~
ISTR_L1REQ
Ë

	)

184 
	#CNTR_CTRM
 (0x8000Ë

	)

185 
	#CNTR_DOVRM
 (0x4000Ë

	)

186 
	#CNTR_ERRM
 (0x2000Ë

	)

187 
	#CNTR_WKUPM
 (0x1000Ë

	)

188 
	#CNTR_SUSPM
 (0x0800Ë

	)

189 
	#CNTR_RESETM
 (0x0400Ë

	)

190 
	#CNTR_SOFM
 (0x0200Ë

	)

191 
	#CNTR_ESOFM
 (0x0100Ë

	)

192 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


193 
	#CNTR_L1REQM
 (0x0080Ë

	)

194 
	#CNTR_L1RESUME
 (0x0020Ë

	)

196 
	#CNTR_RESUME
 (0x0010Ë

	)

197 
	#CNTR_FSUSP
 (0x0008Ë

	)

198 
	#CNTR_LPMODE
 (0x0004Ë

	)

199 
	#CNTR_PDWN
 (0x0002Ë

	)

200 
	#CNTR_FRES
 (0x0001Ë

	)

202 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


207 
	#LPMCSR_BESL
 ((
uöt16_t
)0x00F0Ë

	)

208 
	#LPMCSR_REMWAKE
 ((
uöt16_t
)0x0008Ë

	)

209 
	#LPMCSR_LPMACK
 ((
uöt16_t
)0x0002Ë

	)

210 
	#LPMCSR_LMPEN
 ((
uöt16_t
)0x0001Ë

	)

216 
	#FNR_RXDP
 (0x8000Ë

	)

217 
	#FNR_RXDM
 (0x4000Ë

	)

218 
	#FNR_LCK
 (0x2000Ë

	)

219 
	#FNR_LSOF
 (0x1800Ë

	)

220 
	#FNR_FN
 (0x07FFË

	)

224 
	#DADDR_EF
 (0x80)

	)

225 
	#DADDR_ADD
 (0x7F)

	)

230 
	#EP_CTR_RX
 (0x8000Ë

	)

231 
	#EP_DTOG_RX
 (0x4000Ë

	)

232 
	#EPRX_STAT
 (0x3000Ë

	)

233 
	#EP_SETUP
 (0x0800Ë

	)

234 
	#EP_T_FIELD
 (0x0600Ë

	)

235 
	#EP_KIND
 (0x0100Ë

	)

236 
	#EP_CTR_TX
 (0x0080Ë

	)

237 
	#EP_DTOG_TX
 (0x0040Ë

	)

238 
	#EPTX_STAT
 (0x0030Ë

	)

239 
	#EPADDR_FIELD
 (0x000FË

	)

242 
	#EPREG_MASK
 (
EP_CTR_RX
|
EP_SETUP
|
EP_T_FIELD
|
EP_KIND
|
EP_CTR_TX
|
EPADDR_FIELD
)

	)

245 
	#EP_TYPE_MASK
 (0x0600Ë

	)

246 
	#EP_BULK
 (0x0000Ë

	)

247 
	#EP_CONTROL
 (0x0200Ë

	)

248 
	#EP_ISOCHRONOUS
 (0x0400Ë

	)

249 
	#EP_INTERRUPT
 (0x0600Ë

	)

250 
	#EP_T_MASK
 (~
EP_T_FIELD
 & 
EPREG_MASK
)

	)

254 
	#EPKIND_MASK
 (~
EP_KIND
 & 
EPREG_MASK
)

	)

257 
	#EP_TX_DIS
 (0x0000Ë

	)

258 
	#EP_TX_STALL
 (0x0010Ë

	)

259 
	#EP_TX_NAK
 (0x0020Ë

	)

260 
	#EP_TX_VALID
 (0x0030Ë

	)

261 
	#EPTX_DTOG1
 (0x0010Ë

	)

262 
	#EPTX_DTOG2
 (0x0020Ë

	)

263 
	#EPTX_DTOGMASK
 (
EPTX_STAT
|
EPREG_MASK
)

	)

266 
	#EP_RX_DIS
 (0x0000Ë

	)

267 
	#EP_RX_STALL
 (0x1000Ë

	)

268 
	#EP_RX_NAK
 (0x2000Ë

	)

269 
	#EP_RX_VALID
 (0x3000Ë

	)

270 
	#EPRX_DTOG1
 (0x1000Ë

	)

271 
	#EPRX_DTOG2
 (0x2000Ë

	)

272 
	#EPRX_DTOGMASK
 (
EPRX_STAT
|
EPREG_MASK
)

	)

275 
	#_SëCNTR
(
wRegVÆue
Ë(*
CNTR
 = (
uöt16_t
)wRegVÆue)

	)

278 
	#_SëISTR
(
wRegVÆue
Ë(*
ISTR
 = (
uöt16_t
)wRegVÆue)

	)

281 
	#_SëDADDR
(
wRegVÆue
Ë(*
DADDR
 = (
uöt16_t
)wRegVÆue)

	)

284 
	#_SëBTABLE
(
wRegVÆue
)(*
BTABLE
 = (
uöt16_t
)(wRegVÆuê& 0xFFF8))

	)

287 
	#_SëLPMCSR
(
wRegVÆue
Ë(*
LPMCSR
 = (
uöt16_t
)wRegVÆue)

	)

290 
	#_GëCNTR
(Ë((
uöt16_t
Ë*
CNTR
)

	)

293 
	#_GëISTR
(Ë((
uöt16_t
Ë*
ISTR
)

	)

296 
	#_GëFNR
(Ë((
uöt16_t
Ë*
FNR
)

	)

299 
	#_GëDADDR
(Ë((
uöt16_t
Ë*
DADDR
)

	)

302 
	#_GëBTABLE
(Ë((
uöt16_t
Ë*
BTABLE
)

	)

305 
	#_GëLPMCSR
(Ë((
uöt16_t
Ë*
LPMCSR
)

	)

308 
	#_SëENDPOINT
(
bEpNum
,
wRegVÆue
Ë(*(
EP0REG
 + bEpNum)= \

309 (
uöt16_t
)
wRegVÆue
)

	)

312 
	#_GëENDPOINT
(
bEpNum
Ë((
uöt16_t
)(*(
EP0REG
 + bEpNum)))

	)

322 
	#_SëEPTy≥
(
bEpNum
,
wTy≥
Ë(
	`_SëENDPOINT
(bEpNum,\

323 ((
	`_GëENDPOINT
(
bEpNum
Ë& 
EP_T_MASK
Ë| 
wTy≥
 )))

	)

332 
	#_GëEPTy≥
(
bEpNum
Ë(
	`_GëENDPOINT
(bEpNumË& 
EP_T_FIELD
)

	)

342 
	#_SëEPTxSètus
(
bEpNum
,
wSèã
) {\

343 
uöt16_t
 
_wRegVÆ
; \

344 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& 
EPTX_DTOGMASK
;\

346 if((
EPTX_DTOG1
 & 
wSèã
)!= 0) \

347 
_wRegVÆ
 ^
EPTX_DTOG1
; \

349 if((
EPTX_DTOG2
 & 
wSèã
)!= 0) \

350 
_wRegVÆ
 ^
EPTX_DTOG2
; \

351 
	`_SëENDPOINT
(
bEpNum
, (
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
)); \

352 }

	)

362 
	#_SëEPRxSètus
(
bEpNum
,
wSèã
) {\

363 
uöt16_t
 
_wRegVÆ
; \

365 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& 
EPRX_DTOGMASK
;\

367 if((
EPRX_DTOG1
 & 
wSèã
)!= 0) \

368 
_wRegVÆ
 ^
EPRX_DTOG1
; \

370 if((
EPRX_DTOG2
 & 
wSèã
)!= 0) \

371 
_wRegVÆ
 ^
EPRX_DTOG2
; \

372 
	`_SëENDPOINT
(
bEpNum
, (
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
)); \

373 }

	)

384 
	#_SëEPRxTxSètus
(
bEpNum
,
wSèãrx
,
wSèãtx
) {\

385 
uöt32_t
 
_wRegVÆ
; \

387 
_wRegVÆ
 = 
	`_GëENDPOINT
(
bEpNum
Ë& (
EPRX_DTOGMASK
 |
EPTX_STAT
) ;\

389 if((
EPRX_DTOG1
 & 
wSèãrx
)!= 0) \

390 
_wRegVÆ
 ^
EPRX_DTOG1
; \

392 if((
EPRX_DTOG2
 & 
wSèãrx
)!= 0) \

393 
_wRegVÆ
 ^
EPRX_DTOG2
; \

395 if((
EPTX_DTOG1
 & 
wSèãtx
)!= 0) \

396 
_wRegVÆ
 ^
EPTX_DTOG1
; \

398 if((
EPTX_DTOG2
 & 
wSèãtx
)!= 0) \

399 
_wRegVÆ
 ^
EPTX_DTOG2
; \

400 
	`_SëENDPOINT
(
bEpNum
, 
_wRegVÆ
 | 
EP_CTR_RX
|
EP_CTR_TX
); \

401 }

	)

410 
	#_GëEPTxSètus
(
bEpNum
Ë((
uöt16_t
)
	`_GëENDPOINT
(bEpNumË& 
EPTX_STAT
)

	)

412 
	#_GëEPRxSètus
(
bEpNum
Ë((
uöt16_t
)
	`_GëENDPOINT
(bEpNumË& 
EPRX_STAT
)

	)

421 
	#_SëEPTxVÆid
(
bEpNum
Ë(
	`_SëEPTxSètus
(bEpNum, 
EP_TX_VALID
))

	)

423 
	#_SëEPRxVÆid
(
bEpNum
Ë(
	`_SëEPRxSètus
(bEpNum, 
EP_RX_VALID
))

	)

432 
	#_GëTxSèŒSètus
(
bEpNum
Ë(
	`_GëEPTxSètus
(bEpNum) \

433 =
EP_TX_STALL
)

	)

434 
	#_GëRxSèŒSètus
(
bEpNum
Ë(
	`_GëEPRxSètus
(bEpNum) \

435 =
EP_RX_STALL
)

	)

444 
	#_SëEP_KIND
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

445 (
EP_CTR_RX
|
EP_CTR_TX
|((
	`_GëENDPOINT
(
bEpNum
Ë| 
EP_KIND
Ë& 
EPREG_MASK
))))

	)

446 
	#_CÀ¨EP_KIND
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

447 (
EP_CTR_RX
|
EP_CTR_TX
|(
	`_GëENDPOINT
(
bEpNum
Ë& 
EPKIND_MASK
))))

	)

456 
	#_Së_Sètus_Out
(
bEpNum
Ë
	`_SëEP_KIND
(bEpNum)

	)

457 
	#_CÀ¨_Sètus_Out
(
bEpNum
Ë
	`_CÀ¨EP_KIND
(bEpNum)

	)

466 
	#_SëEPDoubÀBuff
(
bEpNum
Ë
	`_SëEP_KIND
(bEpNum)

	)

467 
	#_CÀ¨EPDoubÀBuff
(
bEpNum
Ë
	`_CÀ¨EP_KIND
(bEpNum)

	)

476 
	#_CÀ¨EP_CTR_RX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum,\

477 
	`_GëENDPOINT
(
bEpNum
Ë& 0x7FFF & 
EPREG_MASK
))

	)

478 
	#_CÀ¨EP_CTR_TX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum,\

479 
	`_GëENDPOINT
(
bEpNum
Ë& 0xFF7F & 
EPREG_MASK
))

	)

488 
	#_ToggÀDTOG_RX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

489 
EP_CTR_RX
|
EP_CTR_TX
|
EP_DTOG_RX
 | (
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
)))

	)

490 
	#_ToggÀDTOG_TX
(
bEpNum
Ë(
	`_SëENDPOINT
(bEpNum, \

491 
EP_CTR_RX
|
EP_CTR_TX
|
EP_DTOG_TX
 | (
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
)))

	)

500 
	#_CÀ¨DTOG_RX
(
bEpNum
Ëif((
	`_GëENDPOINT
(bEpNumË& 
EP_DTOG_RX
) != 0)\

501 
	`_ToggÀDTOG_RX
(
bEpNum
)

	)

502 
	#_CÀ¨DTOG_TX
(
bEpNum
Ëif((
	`_GëENDPOINT
(bEpNumË& 
EP_DTOG_TX
) != 0)\

503 
	`_ToggÀDTOG_TX
(
bEpNum
)

	)

512 
	#_SëEPAddªss
(
bEpNum
,
bAddr
Ë
	`_SëENDPOINT
(bEpNum,\

513 
EP_CTR_RX
|
EP_CTR_TX
|(
	`_GëENDPOINT
(
bEpNum
Ë& 
EPREG_MASK
Ë| 
bAddr
)

	)

522 
	#_GëEPAddªss
(
bEpNum
Ë((
uöt8_t
)(
	`_GëENDPOINT
(bEpNumË& 
EPADDR_FIELD
))

	)

523 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


524 
	#_pEPTxAddr
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8Ë+ 
PMAAddr
))

	)

525 
	#_pEPTxCou¡
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+2Ë+ 
PMAAddr
))

	)

526 
	#_pEPRxAddr
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+4Ë+ 
PMAAddr
))

	)

527 
	#_pEPRxCou¡
(
bEpNum
Ë((
uöt16_t
 *)((
	`_GëBTABLE
()+bEpNum*8+6Ë+ 
PMAAddr
))

	)

530 
	#_pEPTxAddr
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8 )*2 + 
PMAAddr
))

	)

531 
	#_pEPTxCou¡
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+2)*2 + 
PMAAddr
))

	)

532 
	#_pEPRxAddr
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+4)*2 + 
PMAAddr
))

	)

533 
	#_pEPRxCou¡
(
bEpNum
Ë((
uöt32_t
 *)((
	`_GëBTABLE
()+bEpNum*8+6)*2 + 
PMAAddr
))

	)

544 
	#_SëEPTxAddr
(
bEpNum
,
wAddr
Ë(*
	`_pEPTxAddr
(bEpNumË((wAdd∏>> 1Ë<< 1))

	)

545 
	#_SëEPRxAddr
(
bEpNum
,
wAddr
Ë(*
	`_pEPRxAddr
(bEpNumË((wAdd∏>> 1Ë<< 1))

	)

554 
	#_GëEPTxAddr
(
bEpNum
Ë((
uöt16_t
)*
	`_pEPTxAddr
(bEpNum))

	)

555 
	#_GëEPRxAddr
(
bEpNum
Ë((
uöt16_t
)*
	`_pEPRxAddr
(bEpNum))

	)

565 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


566 
	#_BlocksOf32
(
dwReg
,
wCou¡
,
wNBlocks
) {\

567 
wNBlocks
 = 
wCou¡
 >> 5;\

568 if((
wCou¡
 & 0x1f) == 0)\

569 
wNBlocks
--;\

570 *
pdwReg
 = (
uöt16_t
)((
wNBlocks
 << 10) | 0x8000);\

571 }

	)

573 
	#_BlocksOf32
(
dwReg
,
wCou¡
,
wNBlocks
) {\

574 
wNBlocks
 = 
wCou¡
 >> 5;\

575 if((
wCou¡
 & 0x1f) == 0)\

576 
wNBlocks
--;\

577 *
pdwReg
 = (
uöt32_t
)((
wNBlocks
 << 10) | 0x8000);\

578 }

	)

581 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


582 
	#_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
) {\

583 
wNBlocks
 = 
wCou¡
 >> 1;\

584 if((
wCou¡
 & 0x1) != 0)\

585 
wNBlocks
++;\

586 *
pdwReg
 = (
uöt16_t
)(
wNBlocks
 << 10);\

587 }

	)

589 
	#_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
) {\

590 
wNBlocks
 = 
wCou¡
 >> 1;\

591 if((
wCou¡
 & 0x1) != 0)\

592 
wNBlocks
++;\

593 *
pdwReg
 = (
uöt32_t
)(
wNBlocks
 << 10);\

594 }

	)

597 
	#_SëEPCou¡RxReg
(
dwReg
,
wCou¡
) {\

598 
uöt16_t
 
wNBlocks
;\

599 if(
wCou¡
 > 62){
	`_BlocksOf32
(
dwReg
,wCou¡,
wNBlocks
);}\

600 {
	`_BlocksOf2
(
dwReg
,
wCou¡
,
wNBlocks
);}\

601 }

	)

603 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


604 
	#_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
) {\

605 
uöt16_t
 *
pdwReg
 = 
	`_pEPTxCou¡
(
bEpNum
); \

606 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

607 }

	)

609 
	#_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
) {\

610 
uöt32_t
 *
pdwReg
 = 
	`_pEPTxCou¡
(
bEpNum
); \

611 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

612 }

	)

622 
	#_SëEPTxCou¡
(
bEpNum
,
wCou¡
Ë(*
	`_pEPTxCou¡
(bEpNumËwCou¡)

	)

623 #i‡
deföed
 
STM32F303xE
 || deföed 
STM32F302x8


624 
	#_SëEPRxCou¡
(
bEpNum
,
wCou¡
) {\

625 
uöt16_t
 *
pdwReg
 = 
	`_pEPRxCou¡
(
bEpNum
); \

626 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

627 }

	)

629 
	#_SëEPRxCou¡
(
bEpNum
,
wCou¡
) {\

630 
uöt32_t
 *
pdwReg
 = 
	`_pEPRxCou¡
(
bEpNum
); \

631 
	`_SëEPCou¡RxReg
(
pdwReg
, 
wCou¡
);\

632 }

	)

641 
	#_GëEPTxCou¡
(
bEpNum
)((
uöt16_t
)(*
	`_pEPTxCou¡
(bEpNum)Ë& 0x3ff)

	)

642 
	#_GëEPRxCou¡
(
bEpNum
)((
uöt16_t
)(*
	`_pEPRxCou¡
(bEpNum)Ë& 0x3ff)

	)

652 
	#_SëEPDblBuf0Addr
(
bEpNum
,
wBuf0Addr
Ë{
	`_SëEPTxAddr
(bEpNum, wBuf0Addr);}

	)

653 
	#_SëEPDblBuf1Addr
(
bEpNum
,
wBuf1Addr
Ë{
	`_SëEPRxAddr
(bEpNum, wBuf1Addr);}

	)

664 
	#_SëEPDblBuffAddr
(
bEpNum
,
wBuf0Addr
,
wBuf1Addr
) { \

665 
	`_SëEPDblBuf0Addr
(
bEpNum
, 
wBuf0Addr
);\

666 
	`_SëEPDblBuf1Addr
(
bEpNum
, 
wBuf1Addr
);\

667 }

	)

676 
	#_GëEPDblBuf0Addr
(
bEpNum
Ë(
	`_GëEPTxAddr
(bEpNum))

	)

677 
	#_GëEPDblBuf1Addr
(
bEpNum
Ë(
	`_GëEPRxAddr
(bEpNum))

	)

689 
	#_SëEPDblBuf0Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
) { \

690 if(
bDú
 =
EP_DBUF_OUT
)\

692 {
	`_SëEPRxDblBuf0Cou¡
(
bEpNum
,
wCou¡
);} \

693 if(
bDú
 =
EP_DBUF_IN
)\

695 *
	`_pEPTxCou¡
(
bEpNum
Ë(
uöt32_t
)
wCou¡
; \

696 }

	)

698 
	#_SëEPDblBuf1Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
) { \

699 if(
bDú
 =
EP_DBUF_OUT
)\

701 {
	`_SëEPRxCou¡
(
bEpNum
,
wCou¡
);}\

702 if(
bDú
 =
EP_DBUF_IN
)\

704 *
	`_pEPRxCou¡
(
bEpNum
Ë(
uöt32_t
)
wCou¡
; \

705 }

	)

707 
	#_SëEPDblBuffCou¡
(
bEpNum
, 
bDú
, 
wCou¡
) {\

708 
	`_SëEPDblBuf0Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
); \

709 
	`_SëEPDblBuf1Cou¡
(
bEpNum
, 
bDú
, 
wCou¡
); \

710 }

	)

719 
	#_GëEPDblBuf0Cou¡
(
bEpNum
Ë(
	`_GëEPTxCou¡
(bEpNum))

	)

720 
	#_GëEPDblBuf1Cou¡
(
bEpNum
Ë(
	`_GëEPRxCou¡
(bEpNum))

	)

724 
USB_Inô
((*
EPH™dÀrPå
)(
uöt16_t
), (*
Re£tH™dÀrPå
)());

725 
	`USB_Shutdown
();

726 
	`USB_PMA2Buf„r
(
uöt8_t
 
EPn
);

727 
	`USB_Buf„r2PMA
(
uöt8_t
 
EPn
);

728 
	`USB_SídD©a
(
uöt8_t
 
EPn
, 
uöt16_t
 *
D©a
, uöt16_à
Lígth
);

729 
uöt16_t
 
	`USB_IsDevi˚C⁄figuªd
();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

67 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


68 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


69 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

71 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

73 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


74 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

75 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

77 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

79 #unde‡
__GLIBC_USE_IEC_60559_EXT


80 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
deföed
 
__STDC_WANT_IEC_60559_EXT__


81 
	#__GLIBC_USE_IEC_60559_EXT
 1

	)

83 
	#__GLIBC_USE_IEC_60559_EXT
 0

	)

90 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


91 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


92 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

94 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

96 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


97 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

98 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

100 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

105 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


106 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


107 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

109 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (c⁄° *Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

40 #i‡
	`__GNUC_PREREQ
(4, 6)

41 #¥agm®
GCC
 
dügno°ic
 
push


42 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wcast-qual"

44  (*Ë
__p
;

45 #i‡
	`__GNUC_PREREQ
(4, 6)

46 #¥agm®
GCC
 
dügno°ic
 
p›


51  
NULL
;

52 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 #ifde‡
__LDBL_COMPAT


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
__°πoõì128
)

31 #ifde‡
__USE_GNU


32 #ifde‡
__LDBL_COMPAT


33 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

35 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
__°πoõì128_l
)

39 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

40 #ifde‡
__LDBL_COMPAT


41 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

43 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
__°r‰omõì128
)

47 #ifde‡
__USE_MISC


48 #i‡
deföed
 
__LDBL_COMPAT


49 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

50 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

51 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

52 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

53 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

54 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

55 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
__qecvtõì128
)

56 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
__qfcvtõì128
)

57 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
__qgcvtõì128
)

58 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
__qecvtõì128_r
)

59 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
__qfcvtõì128_r
)

61 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 
size_t
 
sz
 = 
	`__glibc_objsize
 (
__ªsﬁved
);

41 i‡(
sz
 =(
size_t
) -1)

42  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

44 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


45 i‡(
	`__glibc_unß„_Àn
 (
PATH_MAX
,  (), 
sz
))

46  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
sz
);

48  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
sz
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

54 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__f‹tify_fun˘i⁄
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67  
	`__glibc_f‹tify
 (
±¢ame_r
, 
__buÊí
,  (),

68 
	`__glibc_objsize
 (
__buf
),

69 
__fd
, 
__buf
, 
__buÊí
);

70 
	}
}

73 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

74 
__THROW
 
__wur
;

75 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

76 
w˘omb
Ë
__wur
;

78 
__f‹tify_fun˘i⁄
 
__wur
 

79 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

84 
	#__STDLIB_MB_LEN_MAX
 16

	)

85 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


88 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

89 && 
__STDLIB_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

90  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__glibc_objsize
 (__s));

91  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

92 
	}
}

95 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

96 c⁄° *
__ª°ri˘
 
__§c
,

97 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


98 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

99 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_nuŒd°
,

100 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

101 c⁄° *
__ª°ri˘
 
__§c
,

102 
size_t
 
__Àn
), 
mb°owcs
)

103 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

104 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

105 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

106 c⁄° *
__ª°ri˘
 
__§c
,

107 
size_t
 
__Àn
), 
mb°owcs
)

108 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

109 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

110 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

111 c⁄° *
__ª°ri˘
 
__§c
,

112 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

113 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

116 
__f‹tify_fun˘i⁄
 
size_t


117 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120 i‡(
	`__buûtö_c⁄°™t_p
 (
__d°
 =
NULL
) && __dst == NULL)

121  
	`__mb°owcs_nuŒd°
 (
__d°
, 
__§c
, 
__Àn
);

123  
	`__glibc_f‹tify_n
 (
mb°owcs
, 
__Àn
,  (
wch¨_t
),

124 
	`__glibc_objsize
 (
__d°
), __d°, 
__§c
, 
__Àn
);

125 
	}
}

127 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

128 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

129 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


130 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

131 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

132 (*
__ª°ri˘
 
__d°
,

133 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

134 
size_t
 
__Àn
), 
wc°ombs
)

135 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

136 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

137 (*
__ª°ri˘
 
__d°
,

138 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

139 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

140 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

142 
__f‹tify_fun˘i⁄
 
size_t


143 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

144 
size_t
 
__Àn
))

146  
	`__glibc_f‹tify
 (
wc°ombs
, 
__Àn
,  (),

147 
	`__glibc_objsize
 (
__d°
),

148 
__d°
, 
__§c
, 
__Àn
);

149 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 
__f‹tify_fun˘i⁄
 *

26 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

27 
size_t
 
__Àn
))

29  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

30 
	`__glibc_objsize0
 (
__de°
));

31 
	}
}

33 
__f‹tify_fun˘i⁄
 *

34 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

36  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

37 
	`__glibc_objsize0
 (
__de°
));

38 
	}
}

40 #ifde‡
__USE_GNU


41 
__f‹tify_fun˘i⁄
 *

42 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__Àn
))

45  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

46 
	`__glibc_objsize0
 (
__de°
));

47 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

59  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
,

60 
	`__glibc_objsize0
 (
__de°
));

61 
	}
}

63 #ifde‡
__USE_MISC


64 
	~<bôs/°rögs_f‹tifõd.h
>

66 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

69 
__f‹tify_fun˘i⁄
 

70 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

72 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__glibc_objsize0
 (__dest));

73 
	}
}

76 
__f‹tify_fun˘i⁄
 *

77 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

79  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

80 
	}
}

82 #ifde‡
__USE_XOPEN2K8


83 
__f‹tify_fun˘i⁄
 *

84 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

86  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

87 
	}
}

91 
__f‹tify_fun˘i⁄
 *

92 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

93 
size_t
 
__Àn
))

95  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

96 
	`__glibc_objsize
 (
__de°
));

97 
	}
}

99 #ifde‡
__USE_XOPEN2K8


100 #i‡
__GNUC_PREREQ
 (4, 7Ë|| 
__glibc_˛™g_¥îeq
 (2, 6)

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

104  
	`__buûtö___°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
,

105 
	`__glibc_objsize
 (
__de°
));

106 
	}
}

108 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

109 
size_t
 
__de°Àn
Ë
__THROW


110 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

111 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

127 
__f‹tify_fun˘i⁄
 *

128 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

131 
	}
}

134 
__f‹tify_fun˘i⁄
 *

135 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

136 
size_t
 
__Àn
))

138  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
,

139 
	`__glibc_objsize
 (
__de°
));

140 
	}
}

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

26 
	`__glibc_objsize0
 (
__de°
));

27 
	}
}

29 
__f‹tify_fun˘i⁄
 

30 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

32 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
,

33 
	`__glibc_objsize0
 (
__de°
));

34 
	}
}

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

163 
__STD_TYPE
 
__SUSECONDS64_T_TYPE
 
	g__su£c⁄ds64_t
;

165 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

166 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

169 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

172 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

175 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

180 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

181 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

184 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

185 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

188 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

189 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

192 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

194 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

197 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

199 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

203 
__off64_t
 
	t__loff_t
;

204 *
	t__ˇddr_t
;

207 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

210 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

215 
	t__sig_©omic_t
;

220 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


221 
	#__time64_t
 
__time_t


	)

222 #ñi‡
__TIMESIZE
 != 64

223 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

226 #unde‡
__STD_TYPE


	@/usr/include/bits/types/__locale_t.h

19 #i‚de‡
_BITS_TYPES___LOCALE_T_H


20 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

41 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 #ifde‡
__USE_TIME_BITS64


8 
__time64_t
 
	ttime_t
;

10 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

127 #unde‡
__USE_ISOC11


128 #unde‡
__USE_ISOC99


129 #unde‡
__USE_ISOC95


130 #unde‡
__USE_ISOCXX11


131 #unde‡
__USE_POSIX


132 #unde‡
__USE_POSIX2


133 #unde‡
__USE_POSIX199309


134 #unde‡
__USE_POSIX199506


135 #unde‡
__USE_XOPEN


136 #unde‡
__USE_XOPEN_EXTENDED


137 #unde‡
__USE_UNIX98


138 #unde‡
__USE_XOPEN2K


139 #unde‡
__USE_XOPEN2KXSI


140 #unde‡
__USE_XOPEN2K8


141 #unde‡
__USE_XOPEN2K8XSI


142 #unde‡
__USE_LARGEFILE


143 #unde‡
__USE_LARGEFILE64


144 #unde‡
__USE_FILE_OFFSET64


145 #unde‡
__USE_MISC


146 #unde‡
__USE_ATFILE


147 #unde‡
__USE_DYNAMIC_STACK_SIZE


148 #unde‡
__USE_GNU


149 #unde‡
__USE_FORTIFY_LEVEL


150 #unde‡
__KERNEL_STRICT_NAMES


151 #unde‡
__GLIBC_USE_ISOC2X


152 #unde‡
__GLIBC_USE_DEPRECATED_GETS


153 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


157 #i‚de‡
_LOOSE_KERNEL_NAMES


158 
	#__KERNEL_STRICT_NAMES


	)

168 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


169 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

170 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

179 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


180 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

181 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

183 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

187 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

193 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

194 && !
deföed
 
	g_DEFAULT_SOURCE


196 #unde‡
_DEFAULT_SOURCE


197 
	#_DEFAULT_SOURCE
 1

	)

201 #ifde‡
_GNU_SOURCE


202 #unde‡
_ISOC95_SOURCE


203 
	#_ISOC95_SOURCE
 1

	)

204 #unde‡
_ISOC99_SOURCE


205 
	#_ISOC99_SOURCE
 1

	)

206 #unde‡
_ISOC11_SOURCE


207 
	#_ISOC11_SOURCE
 1

	)

208 #unde‡
_ISOC2X_SOURCE


209 
	#_ISOC2X_SOURCE
 1

	)

210 #unde‡
_POSIX_SOURCE


211 
	#_POSIX_SOURCE
 1

	)

212 #unde‡
_POSIX_C_SOURCE


213 
	#_POSIX_C_SOURCE
 200809L

	)

214 #unde‡
_XOPEN_SOURCE


215 
	#_XOPEN_SOURCE
 700

	)

216 #unde‡
_XOPEN_SOURCE_EXTENDED


217 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

218 #unde‡
_LARGEFILE64_SOURCE


219 
	#_LARGEFILE64_SOURCE
 1

	)

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

222 #unde‡
_ATFILE_SOURCE


223 
	#_ATFILE_SOURCE
 1

	)

224 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


225 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

230 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

231 || (!
deföed
 
	g__STRICT_ANSI__
 \

232 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

233 && !
deföed
 
	g_ISOC2X_SOURCE
 \

234 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

235 && !
deföed
 
	g_XOPEN_SOURCE
))

236 #unde‡
_DEFAULT_SOURCE


237 
	#_DEFAULT_SOURCE
 1

	)

241 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

242 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

243 
	#__GLIBC_USE_ISOC2X
 1

	)

245 
	#__GLIBC_USE_ISOC2X
 0

	)

249 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

250 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

251 
	#__USE_ISOC11
 1

	)

255 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

256 || 
deföed
 
_ISOC2X_SOURCE
 \

257 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

258 
	#__USE_ISOC99
 1

	)

262 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

263 || 
deföed
 
_ISOC2X_SOURCE
 \

264 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

265 
	#__USE_ISOC95
 1

	)

268 #ifde‡
__˝lu•lus


270 #i‡
__˝lu•lus
 >= 201703L

271 
	#__USE_ISOC11
 1

	)

275 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


276 
	#__USE_ISOCXX11
 1

	)

277 
	#__USE_ISOC99
 1

	)

284 #ifde‡
_DEFAULT_SOURCE


285 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


286 
	#__USE_POSIX_IMPLICITLY
 1

	)

288 #unde‡
_POSIX_SOURCE


289 
	#_POSIX_SOURCE
 1

	)

290 #unde‡
_POSIX_C_SOURCE


291 
	#_POSIX_C_SOURCE
 200809L

	)

294 #i‡((!
deföed
 
__STRICT_ANSI__
 \

295 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

296 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

297 
	#_POSIX_SOURCE
 1

	)

298 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

299 
	#_POSIX_C_SOURCE
 2

	)

300 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

301 
	#_POSIX_C_SOURCE
 199506L

	)

302 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

303 
	#_POSIX_C_SOURCE
 200112L

	)

305 
	#_POSIX_C_SOURCE
 200809L

	)

307 
	#__USE_POSIX_IMPLICITLY
 1

	)

316 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

317 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

318 
	#_POSIX_SOURCE
 1

	)

319 #unde‡
_POSIX_C_SOURCE


320 
	#_POSIX_C_SOURCE
 199506L

	)

323 #i‡(
deföed
 
_POSIX_SOURCE
 \

324 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

325 || 
deföed
 
_XOPEN_SOURCE
)

326 
	#__USE_POSIX
 1

	)

329 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


330 
	#__USE_POSIX2
 1

	)

333 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

334 
	#__USE_POSIX199309
 1

	)

337 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

338 
	#__USE_POSIX199506
 1

	)

341 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

342 
	#__USE_XOPEN2K
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

350 
	#__USE_XOPEN2K8
 1

	)

351 #unde‡
_ATFILE_SOURCE


352 
	#_ATFILE_SOURCE
 1

	)

355 #ifdef 
_XOPEN_SOURCE


356 
	#__USE_XOPEN
 1

	)

357 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

358 
	#__USE_XOPEN_EXTENDED
 1

	)

359 
	#__USE_UNIX98
 1

	)

360 #unde‡
_LARGEFILE_SOURCE


361 
	#_LARGEFILE_SOURCE
 1

	)

362 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

363 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

364 
	#__USE_XOPEN2K8
 1

	)

365 
	#__USE_XOPEN2K8XSI
 1

	)

367 
	#__USE_XOPEN2K
 1

	)

368 
	#__USE_XOPEN2KXSI
 1

	)

369 #unde‡
__USE_ISOC95


370 
	#__USE_ISOC95
 1

	)

371 #unde‡
__USE_ISOC99


372 
	#__USE_ISOC99
 1

	)

375 #ifde‡
_XOPEN_SOURCE_EXTENDED


376 
	#__USE_XOPEN_EXTENDED
 1

	)

381 #ifde‡
_LARGEFILE_SOURCE


382 
	#__USE_LARGEFILE
 1

	)

385 #ifde‡
_LARGEFILE64_SOURCE


386 
	#__USE_LARGEFILE64
 1

	)

389 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

390 
	#__USE_FILE_OFFSET64
 1

	)

393 
	~<„©uªs-time64.h
>

395 #i‡
deföed
 
_DEFAULT_SOURCE


396 
	#__USE_MISC
 1

	)

399 #ifdef 
_ATFILE_SOURCE


400 
	#__USE_ATFILE
 1

	)

403 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


404 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

407 #ifdef 
_GNU_SOURCE


408 
	#__USE_GNU
 1

	)

411 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

412 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

413 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

414 #ñi‡!
__GNUC_PREREQ
 (4, 1)

415 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


416 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

417 || 
	$__GNUC_PREREQ
 (12, 0))

419 #i‡
_FORTIFY_SOURCE
 > 3

420 #w¨nög 
_FORTIFY_SOURCE
 > 3 
is
 
åóãd
 
like
 3 
⁄
 
this
 
∂©f‹m


422 
	#__USE_FORTIFY_LEVEL
 3

	)

423 #ñi‡
_FORTIFY_SOURCE
 > 1

424 #i‡
_FORTIFY_SOURCE
 > 2

425 #w¨nög 
_FORTIFY_SOURCE
 > 2 
is
 
åóãd
 
like
 2 
⁄
 
this
 
∂©f‹m


427 
	#__USE_FORTIFY_LEVEL
 2

	)

429 
	#__USE_FORTIFY_LEVEL
 1

	)

432 #i‚de‡
__USE_FORTIFY_LEVEL


433 
	#__USE_FORTIFY_LEVEL
 0

	)

440 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


441 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

443 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

458 #i‡(
deföed
 
__USE_GNU
 \

459 && (
deföed
 
__˝lu•lus
 \

460 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

461 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

462 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

464 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

469 
	~<°dc-¥edef.h
>

477 #unde‡
__GNU_LIBRARY__


478 
	#__GNU_LIBRARY__
 6

	)

482 
	#__GLIBC__
 2

	)

483 
	#__GLIBC_MINOR__
 37

	)

485 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

486 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

489 #i‚de‡
__ASSEMBLER__


490 #i‚de‡
_SYS_CDEFS_H


491 
	~<sys/cdefs.h
>

496 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


497 
	#__USE_LARGEFILE
 1

	)

498 
	#__USE_LARGEFILE64
 1

	)

504 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

505 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

506 && 
deföed
 
__exã∫_ölöe


507 
	#__USE_EXTERN_INLINES
 1

	)

515 
	~<gnu/°ubs.h
>

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
	g__BEGIN_DECLS


101 #i‚de‡
__USE_TIME_BITS64


102 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

103 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

104 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

105 
timevÆ
 *
__ª°ri˘
 
__timeout
);

107 #ifde‡
__REDIRECT


108 
__REDIRECT
 (
£À˘
,

109 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
),

113 
__£À˘64
);

115 
	#£À˘
 
__£À˘64


	)

119 #ifde‡
__USE_XOPEN2K


126 #i‚de‡
__USE_TIME_BITS64


127 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

128 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

129 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

130 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

131 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

133 #ifde‡
__REDIRECT


134 
__REDIRECT
 (
p£À˘
,

135 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

136 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

137 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

138 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

139 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
),

140 
__p£À˘64
);

142 
	#p£À˘
 
__p£À˘64


	)

149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


150 
	~<bôs/£À˘2.h
>

153 
	g__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/long-double.h

21 
	#__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 0

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

46 
	~<bôs/©omic_wide_cou¡î.h
>

51 
	s__±hªad_öã∫Æ_li°


53 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

54 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

55 } 
	t__±hªad_li°_t
;

57 
	s__±hªad_öã∫Æ_¶i°


59 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

60 } 
	t__±hªad_¶i°_t
;

76 
	~<bôs/°ru˘_muãx.h
>

89 
	~<bôs/°ru˘_rwlock.h
>

94 
	s__±hªad_c⁄d_s


96 
__©omic_wide_cou¡î
 
	m__w£q
;

97 
__©omic_wide_cou¡î
 
	m__g1_°¨t
;

98 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

99 
	m__g_size
[2];

100 
	m__g1_‹ig_size
;

101 
	m__wªfs
;

102 
	m__g_sig«ls
[2];

105 
	t__tss_t
;

106 
	t__thrd_t
;

110 
__d©a
 
	m__ONCE_ALIGNMENT
;

111 } 
	t__⁄˚_Êag
;

113 
	#__ONCE_FLAG_INIT
 { 0 }

	)

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 
	~<bôs/w‹dsize.h
>

21 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


23 
	#__TIMESIZE
 64

	)

26 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

7 
	~<bôs/ty≥s/time_t.h
>

11 
	stime•ec


13 #ifde‡
__USE_TIME_BITS64


14 
__time64_t
 
	mtv_£c
;

16 
__time_t
 
	mtv_£c
;

18 #i‡
__WORDSIZE
 == 64 \

19 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

20 || (
__TIMESIZE
 =32 && !
deföed
 
__USE_TIME_BITS64
)

21 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

23 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


25 
	mtv_n£c
;

27 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 #ifde‡
__USE_TIME_BITS64


11 
__time64_t
 
	mtv_£c
;

12 
__su£c⁄ds64_t
 
	mtv_u£c
;

14 
__time_t
 
	mtv_£c
;

15 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__SUSECONDS64_T_TYPE
 
__SQUAD_TYPE


	)

68 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

77 #ifde‡
__x86_64__


81 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

84 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

90 
	#__STATFS_MATCHES_STATFS64
 1

	)

93 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 1

	)

95 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

97 
	#__STATFS_MATCHES_STATFS64
 0

	)

99 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 0

	)

103 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

27 #ñi‡
__TIMESIZE
 == 32

28 
	#__USE_TIME_BITS64
 1

	)

30 #ñi‡
_TIME_BITS
 == 32

31 #i‡
__TIMESIZE
 > 32

35 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__
 && !deföed 
__˝lu•lus


35 #unde‡
__P


36 #unde‡
__PMT


42 #i‡(
deföed
 
__has_©åibuã
 \

43 && (!
deföed
 
	g__˛™g_mö‹__
 \

44 || 3 < 
	g__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
)))

45 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

47 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

49 #ifde‡
__has_buûtö


50 
	#__glibc_has_buûtö
(
«me
Ë
	`__has_buûtö
 («me)

	)

52 
	#__glibc_has_buûtö
(
«me
Ë0

	)

54 #ifde‡
__has_exãnsi⁄


55 
	#__glibc_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

57 
	#__glibc_has_exãnsi⁄
(
ext
Ë0

	)

60 #i‡
deföed
 
__GNUC__
 || deföed 
__˛™g__


64 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


65 
	#__LEAF
 , 
__Àaf__


	)

66 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

68 
	#__LEAF


	)

69 
	#__LEAF_ATTR


	)

77 #i‡!
deföed
 
__˝lu•lus
 \

78 && (
__GNUC_PREREQ
 (3, 4Ë|| 
	$__glibc_has_©åibuã
 (
__nŸhrow__
))

79 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

80 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

81 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

82 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

84 #i‡
deföed
 
__˝lu•lus
 && (
	`__GNUC_PREREQ
 (2,8Ë|| 
__˛™g_maj‹
 >= 4)

85 #i‡
__˝lu•lus
 >= 201103L

86 
	#__THROW
 
	`n€x˚±
 (
åue
)

	)

88 
	#__THROW
 
	`throw
 ()

	)

90 
	#__THROWNL
 
__THROW


	)

91 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
__THROW


	)

92 
	#__NTHNL
(
f˘
Ëf˘ 
__THROW


	)

94 
	#__THROW


	)

95 
	#__THROWNL


	)

96 
	#__NTH
(
f˘
Ë
	)
fct

97 
	#__NTHNL
(
f˘
Ë
	)
fct

103 #i‡(
deföed
 
__˝lu•lus
 \

104 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

105 
	#__ölöe
 
ölöe


	)

107 
	#__ölöe


	)

110 
	#__THROW


	)

111 
	#__THROWNL


	)

112 
	#__NTH
(
f˘
Ë
	)
fct

118 
	#__P
(
¨gs
Ë
	)
args

119 
	#__PMT
(
¨gs
Ë
	)
args

124 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

125 
	#__STRING
(
x
Ë#x

	)

128 
	#__±r_t
 *

	)

132 #ifdef 
__˝lu•lus


133 
	#__BEGIN_DECLS
 "C" {

	)

134 
	#__END_DECLS
 
	}

	)
}

136 
	#__BEGIN_DECLS


	)

137 
	#__END_DECLS


	)

142 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

143 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

146 #i‡
__USE_FORTIFY_LEVEL
 =3 && (
__glibc_˛™g_¥îeq
 (9, 0) \

147 || 
	$__GNUC_PREREQ
 (12, 0))

148 
	#__glibc_objsize0
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 0)

	)

149 
	#__glibc_objsize
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 1)

	)

151 
	#__glibc_objsize0
(
__o
Ë
	`__bos0
 (__o)

	)

152 
	#__glibc_objsize
(
__o
Ë
	`__bos
 (__o)

	)

159 
	#__glibc_ß„_Àn_c⁄d
(
__l
, 
__s
, 
__osz
Ë((__lË<(__oszË/ (__s))

	)

160 
	#__glibc_unsig√d_‹_posôive
(
__l
) \

161 ((
	`__ty≥of
 (
__l
)) 0 < (__typeof (__l)) -1 \

162 || (
	`__buûtö_c⁄°™t_p
 (
__l
Ë&& (__lË> 0))

	)

166 
	#__glibc_ß„_‹_unknown_Àn
(
__l
, 
__s
, 
__osz
) \

167 ((
	`__buûtö_c⁄°™t_p
 (
__osz
Ë&& (__oszË=(
__SIZE_TYPE__
) -1) \

168 || (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

169 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

170 (
__s
), (
__osz
))) \

171 && 
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), (
__s
), (
__osz
))))

	)

176 
	#__glibc_unß„_Àn
(
__l
, 
__s
, 
__osz
) \

177 (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

178 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

179 
__s
, 
__osz
)) \

180 && !
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), 
__s
, 
__osz
))

	)

185 
	#__glibc_f‹tify
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

186 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

187 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

188 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

189 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, 
__osz
) \

190 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, 
__osz
))) \

191 

	)

195 
	#__glibc_f‹tify_n
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

196 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

197 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

198 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

199 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)) \

200 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)))) \

201 

	)

202 #i‡
	`__GNUC_PREREQ
 (4,3)

203 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

204 
	#__îr‹de˛
(
«me
, 
msg
) \

205 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

207 
	#__w¨«âr
(
msg
)

	)

208 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

215 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >199901L && !deföed 
__HP_cc


216 
	#__Êex¨r
 []

	)

217 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

218 #ñi‡
	`__GNUC_PREREQ
 (2,97Ë|| 
deföed
 
__˛™g__


221 
	#__Êex¨r
 []

	)

222 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

223 #ñi‡
deföed
 
__GNUC__


226 
	#__Êex¨r
 [0]

	)

227 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

230 
	#__Êex¨r
 [1]

	)

231 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

245 #i‡(
deföed
 
__GNUC__
 && __GNUC__ >2Ë|| (
__˛™g_maj‹__
 >= 4)

247 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

248 #ifde‡
__˝lu•lus


249 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

250 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

251 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

252 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

254 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

255 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

256 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

257 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

259 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

260 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

273 #i‡!(
deföed
 
__GNUC__
 || deföed 
__˛™g__
)

274 
	#__©åibuã__
(
xyz
Ë

	)

280 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__mÆloc__
)

281 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

283 
	#__©åibuã_mÆloc__


	)

288 #i‡
	`__GNUC_PREREQ
 (4, 3)

289 
	#__©åibuã_Æloc_size__
(
∑øms
) \

290 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

292 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

297 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__Æloc_Æign__
)

298 
	#__©åibuã_Æloc_Æign__
(
∑øm
) \

299 
	`__©åibuã__
 ((
__Æloc_Æign__
 
∑øm
))

	)

301 
	#__©åibuã_Æloc_Æign__
(
∑øm
Ë

	)

307 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__puª__
)

308 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

310 
	#__©åibuã_puª__


	)

314 #i‡
	`__GNUC_PREREQ
 (2,5Ë|| 
	`__glibc_has_©åibuã
 (
__c⁄°__
)

315 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

317 
	#__©åibuã_c⁄°__


	)

320 #i‡
	`__GNUC_PREREQ
 (2,7Ë|| 
	`__glibc_has_©åibuã
 (
__unu£d__
)

321 
	#__©åibuã_maybe_unu£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

323 
	#__©åibuã_maybe_unu£d__


	)

329 #i‡
	`__GNUC_PREREQ
 (3,1Ë|| 
	`__glibc_has_©åibuã
 (
__u£d__
)

330 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

331 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

333 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

334 
	#__©åibuã_noölöe__


	)

338 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__dïªˇãd__
)

339 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

341 
	#__©åibuã_dïªˇãd__


	)

347 #i‡
	`__GNUC_PREREQ
 (4,5) \

348 || 
	$__glibc_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

349 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

350 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

352 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

361 #i‡
	`__GNUC_PREREQ
 (2,8Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©_¨g__
)

362 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

364 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

371 #i‡
	`__GNUC_PREREQ
 (2,97Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©__
)

372 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

373 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

375 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

382 #i‚de‡
__©åibuã_n⁄nuŒ__


383 #i‡
	`__GNUC_PREREQ
 (3,3Ë|| 
	`__glibc_has_©åibuã
 (
__n⁄nuŒ__
)

384 
	#__©åibuã_n⁄nuŒ__
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

386 
	#__©åibuã_n⁄nuŒ__
(
∑øms
)

	)

389 #i‚de‡
__n⁄nuŒ


390 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã_n⁄nuŒ__
 (∑øms)

	)

395 #i‚de‡
__ªtu∫s_n⁄nuŒ


396 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__ªtu∫s_n⁄nuŒ__
)

397 
	#__ªtu∫s_n⁄nuŒ
 
	`__©åibuã__
 ((
__ªtu∫s_n⁄nuŒ__
))

	)

399 
	#__ªtu∫s_n⁄nuŒ


	)

405 #i‡
	`__GNUC_PREREQ
 (3,4Ë|| 
	`__glibc_has_©åibuã
 (
__w¨n_unu£d_ªsu…__
)

406 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

407 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

408 #i‡
deföed
 
__USE_FORTIFY_LEVEL
 && __USE_FORTIFY_LEVEL > 0

409 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

412 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

414 #i‚de‡
__wur


415 
	#__wur


	)

419 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__Æways_ölöe__
)

423 #unde‡
__Æways_ölöe


424 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

426 #unde‡
__Æways_ölöe


427 
	#__Æways_ölöe
 
__ölöe


	)

432 #i‡
	`__GNUC_PREREQ
 (4,3Ë|| 
	`__glibc_has_©åibuã
 (
__¨tificül__
)

433 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

435 
	#__©åibuã_¨tificül__


	)

447 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

448 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

449 || 
deföed
 
__GNUC_GNU_INLINE__
)))

450 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


451 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

452 
	#__exã∫_Æways_ölöe
 \

453 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

455 
	#__exã∫_ölöe
 
__ölöe


	)

456 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

460 #ifde‡
__exã∫_Æways_ölöe


461 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

466 #i‡
	`__GNUC_PREREQ
 (4,3)

467 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

468 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

475 #i‡!(
	`__GNUC_PREREQ
 (2,8Ë|| 
deföed
 
__˛™g__
)

476 
	#__exãnsi⁄__


	)

482 #i‡!(
	`__GNUC_PREREQ
 (2,92Ë|| 
__˛™g_maj‹__
 >= 3)

483 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

484 
	#__ª°ri˘
 
ª°ri˘


	)

486 
	#__ª°ri˘


	)

494 #i‡(
	`__GNUC_PREREQ
 (3,1Ë|| 
__˛™g_maj‹__
 >3Ë&& !
deföed
 
__˝lu•lus


495 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

497 #ifde‡
__GNUC__


498 
	#__ª°ri˘_¨r


	)

500 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

501 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

504 
	#__ª°ri˘_¨r


	)

509 #i‡(
__GNUC__
 >3Ë|| 
	`__glibc_has_buûtö
 (
__buûtö_ex≥˘
)

510 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

511 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

513 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

514 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

517 #i‡(!
deföed
 
_N‹ëu∫
 \

518 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

519 && !(
	`__GNUC_PREREQ
 (4,7) \

520 || (3 < 
__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
))))

521 #i‡
	`__GNUC_PREREQ
 (2,8)

522 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

524 
	#_N‹ëu∫


	)

528 #i‡
	`__GNUC_PREREQ
 (8, 0)

532 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

534 
	#__©åibuã_n⁄°rög__


	)

538 #unde‡
__©åibuã_c›y__


539 #i‡
	`__GNUC_PREREQ
 (9, 0)

542 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

544 
	#__©åibuã_c›y__
(
¨g
)

	)

547 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

548 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

549 && (!(
	`__GNUC_PREREQ
 (4, 6Ë|| 
__˛™g_maj‹__
 >= 4) \

550 || 
deföed
 
__STRICT_ANSI__
))

551 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

552 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

553 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

558 #i‚de‡
__GNULIB_CDEFS


559 
	~<bôs/w‹dsize.h
>

560 
	~<bôs/l⁄g-doubÀ.h
>

563 #i‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

564 #ifde‡
__REDIRECT


567 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú


	)

568 
	#__LDBL_REDIR_DECL
(
«me
) \

569 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

572 
	#__LDBL_REDIR2_DECL
(
«me
) \

573 
	`__ty≥of
 (
__
##
«me
) __##name \

574 
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

577 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ldbl_ªdú1


	)

578 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

579 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

581 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

582 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

583 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

584 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__
##
Æüs
##
õì128
)

	)

587 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ªdúe˘_ldbl


	)

588 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú_¡h


	)

591 
	`_Sètic_as£π
 (0, "IEEE 128-bitsÜong doubleÑequiresÑedirection onÅhisÖlatform");

593 #ñi‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


594 
	#__LDBL_COMPAT
 1

	)

595 #ifde‡
__REDIRECT


596 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

597 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

598 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

599 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

600 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

601 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

602 
	#__LDBL_REDIR2_DECL
(
«me
) \

603 
	`__ty≥of
 (
__
##
«me
Ë__##«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl___" #«me));

	)

604 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

605 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

606 
	#__LDBL_REDIR_DECL
(
«me
) \

607 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

608 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

609 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

610 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

611 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

614 #i‡(!
deföed
 
__LDBL_COMPAT
 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0) \

615 || !
deföed
 
__REDIRECT


616 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

617 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

618 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

619 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

620 
	#__LDBL_REDIR2_DECL
(
«me
)

	)

621 
	#__LDBL_REDIR_DECL
(
«me
)

	)

622 #ifde‡
__REDIRECT


623 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

624 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

625 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

634 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

635 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

636 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

637 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

639 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

649 #i‡!
deföed
 
__˝lu•lus
 \

650 && (
	`__GNUC_PREREQ
 (4, 9) \

651 || 
	`__glibc_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

652 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

653 && 
__STDC_VERSION__
 >= 201112L))

654 
	#__HAVE_GENERIC_SELECTION
 1

	)

656 
	#__HAVE_GENERIC_SELECTION
 0

	)

659 #i‡
	`__GNUC_PREREQ
 (10, 0)

665 
	#__©å_ac˚ss
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

670 #i‡
__USE_FORTIFY_LEVEL
 == 3

671 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (a, o)))

	)

673 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©å_ac˚ss
 (◊, o, s))

	)

675 #i‡
	`__GNUC_PREREQ
 (11, 0)

676 
	#__©å_ac˚ss_n⁄e
(
¨gno
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (
__n⁄e__
,árgno)))

	)

678 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

681 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
)

	)

682 
	#__©å_ac˚ss
(
x
)

	)

683 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

686 #i‡
	`__GNUC_PREREQ
 (11, 0)

689 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
) \

690 
	`__©åibuã__
 ((
	`__mÆloc__
 (
dóŒoc
, 
¨gno
)))

	)

691 
	#__©å_dóŒoc_‰ì
 
	`__©å_dóŒoc
 (
__buûtö_‰ì
, 1)

	)

693 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
)

	)

694 
	#__©å_dóŒoc_‰ì


	)

699 #i‡
	`__GNUC_PREREQ
 (4, 1)

700 
	#__©åibuã_ªtu∫s_twi˚__
 
	`__©åibuã__
 ((
__ªtu∫s_twi˚__
))

	)

702 
	#__©åibuã_ªtu∫s_twi˚__


	)

	@/usr/include/bits/atomic_wide_counter.h

19 #i‚de‡
_BITS_ATOMIC_WIDE_COUNTER_H


20 
	#_BITS_ATOMIC_WIDE_COUNTER_H


	)

27 
__exãnsi⁄__
 
	m__vÆue64
;

30 
	m__low
;

31 
	m__high
;

32 } 
	m__vÆue32
;

33 } 
	t__©omic_wide_cou¡î
;

	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_ªvoke


	)

14 
	#__°ub_£éogö


	)

15 
	#__°ub_sigªtu∫


	)

16 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_°ty


	)

	@
1
.
1
/usr/include
67
2451
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/bitwise.h
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/hid.c
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/hid.h
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/led.c
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/led.h
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/main.c
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/system_stm32f10x.c
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/usb.c
/home/tong/05_files/top_github_aws/awesome/stm32-hid-bootloader/bootloader/usb.h
/usr/include/stdlib.h
/usr/include/string.h
bitwise.h
hid.h
led.h
usb.h
/usr/include/alloca.h
/usr/include/bits/floatn.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/strings.h
/usr/include/sys/types.h
/usr/include/bits/floatn-common.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/types.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/sys/select.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/typesizes.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/wordsize.h
/usr/include/features-time64.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/bits/atomic_wide_counter.h
/usr/include/bits/endianness.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/__sigset_t.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
